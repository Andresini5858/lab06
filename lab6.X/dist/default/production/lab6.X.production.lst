

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue Oct 25 00:40:43 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15     0000                     
    16                           ; Version 2.40
    17                           ; Generated 17/11/2021 GMT
    18                           ; 
    19                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F887 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51     0000                     	;# 
    52     0001                     	;# 
    53     0002                     	;# 
    54     0003                     	;# 
    55     0004                     	;# 
    56     0005                     	;# 
    57     0006                     	;# 
    58     0007                     	;# 
    59     0008                     	;# 
    60     0009                     	;# 
    61     000A                     	;# 
    62     000B                     	;# 
    63     000C                     	;# 
    64     000D                     	;# 
    65     000E                     	;# 
    66     000E                     	;# 
    67     000F                     	;# 
    68     0010                     	;# 
    69     0011                     	;# 
    70     0012                     	;# 
    71     0013                     	;# 
    72     0014                     	;# 
    73     0015                     	;# 
    74     0015                     	;# 
    75     0016                     	;# 
    76     0017                     	;# 
    77     0018                     	;# 
    78     0019                     	;# 
    79     001A                     	;# 
    80     001B                     	;# 
    81     001B                     	;# 
    82     001C                     	;# 
    83     001D                     	;# 
    84     001E                     	;# 
    85     001F                     	;# 
    86     0081                     	;# 
    87     0085                     	;# 
    88     0086                     	;# 
    89     0087                     	;# 
    90     0088                     	;# 
    91     0089                     	;# 
    92     008C                     	;# 
    93     008D                     	;# 
    94     008E                     	;# 
    95     008F                     	;# 
    96     0090                     	;# 
    97     0091                     	;# 
    98     0092                     	;# 
    99     0093                     	;# 
   100     0093                     	;# 
   101     0093                     	;# 
   102     0094                     	;# 
   103     0095                     	;# 
   104     0096                     	;# 
   105     0097                     	;# 
   106     0098                     	;# 
   107     0099                     	;# 
   108     009A                     	;# 
   109     009B                     	;# 
   110     009C                     	;# 
   111     009D                     	;# 
   112     009E                     	;# 
   113     009F                     	;# 
   114     0105                     	;# 
   115     0107                     	;# 
   116     0108                     	;# 
   117     0109                     	;# 
   118     010C                     	;# 
   119     010C                     	;# 
   120     010D                     	;# 
   121     010E                     	;# 
   122     010F                     	;# 
   123     0185                     	;# 
   124     0187                     	;# 
   125     0188                     	;# 
   126     0189                     	;# 
   127     018C                     	;# 
   128     018D                     	;# 
   129     0000                     	;# 
   130     0001                     	;# 
   131     0002                     	;# 
   132     0003                     	;# 
   133     0004                     	;# 
   134     0005                     	;# 
   135     0006                     	;# 
   136     0007                     	;# 
   137     0008                     	;# 
   138     0009                     	;# 
   139     000A                     	;# 
   140     000B                     	;# 
   141     000C                     	;# 
   142     000D                     	;# 
   143     000E                     	;# 
   144     000E                     	;# 
   145     000F                     	;# 
   146     0010                     	;# 
   147     0011                     	;# 
   148     0012                     	;# 
   149     0013                     	;# 
   150     0014                     	;# 
   151     0015                     	;# 
   152     0015                     	;# 
   153     0016                     	;# 
   154     0017                     	;# 
   155     0018                     	;# 
   156     0019                     	;# 
   157     001A                     	;# 
   158     001B                     	;# 
   159     001B                     	;# 
   160     001C                     	;# 
   161     001D                     	;# 
   162     001E                     	;# 
   163     001F                     	;# 
   164     0081                     	;# 
   165     0085                     	;# 
   166     0086                     	;# 
   167     0087                     	;# 
   168     0088                     	;# 
   169     0089                     	;# 
   170     008C                     	;# 
   171     008D                     	;# 
   172     008E                     	;# 
   173     008F                     	;# 
   174     0090                     	;# 
   175     0091                     	;# 
   176     0092                     	;# 
   177     0093                     	;# 
   178     0093                     	;# 
   179     0093                     	;# 
   180     0094                     	;# 
   181     0095                     	;# 
   182     0096                     	;# 
   183     0097                     	;# 
   184     0098                     	;# 
   185     0099                     	;# 
   186     009A                     	;# 
   187     009B                     	;# 
   188     009C                     	;# 
   189     009D                     	;# 
   190     009E                     	;# 
   191     009F                     	;# 
   192     0105                     	;# 
   193     0107                     	;# 
   194     0108                     	;# 
   195     0109                     	;# 
   196     010C                     	;# 
   197     010C                     	;# 
   198     010D                     	;# 
   199     010E                     	;# 
   200     010F                     	;# 
   201     0185                     	;# 
   202     0187                     	;# 
   203     0188                     	;# 
   204     0189                     	;# 
   205     018C                     	;# 
   206     018D                     	;# 
   207     0000                     	;# 
   208     0001                     	;# 
   209     0002                     	;# 
   210     0003                     	;# 
   211     0004                     	;# 
   212     0005                     	;# 
   213     0006                     	;# 
   214     0007                     	;# 
   215     0008                     	;# 
   216     0009                     	;# 
   217     000A                     	;# 
   218     000B                     	;# 
   219     000C                     	;# 
   220     000D                     	;# 
   221     000E                     	;# 
   222     000E                     	;# 
   223     000F                     	;# 
   224     0010                     	;# 
   225     0011                     	;# 
   226     0012                     	;# 
   227     0013                     	;# 
   228     0014                     	;# 
   229     0015                     	;# 
   230     0015                     	;# 
   231     0016                     	;# 
   232     0017                     	;# 
   233     0018                     	;# 
   234     0019                     	;# 
   235     001A                     	;# 
   236     001B                     	;# 
   237     001B                     	;# 
   238     001C                     	;# 
   239     001D                     	;# 
   240     001E                     	;# 
   241     001F                     	;# 
   242     0081                     	;# 
   243     0085                     	;# 
   244     0086                     	;# 
   245     0087                     	;# 
   246     0088                     	;# 
   247     0089                     	;# 
   248     008C                     	;# 
   249     008D                     	;# 
   250     008E                     	;# 
   251     008F                     	;# 
   252     0090                     	;# 
   253     0091                     	;# 
   254     0092                     	;# 
   255     0093                     	;# 
   256     0093                     	;# 
   257     0093                     	;# 
   258     0094                     	;# 
   259     0095                     	;# 
   260     0096                     	;# 
   261     0097                     	;# 
   262     0098                     	;# 
   263     0099                     	;# 
   264     009A                     	;# 
   265     009B                     	;# 
   266     009C                     	;# 
   267     009D                     	;# 
   268     009E                     	;# 
   269     009F                     	;# 
   270     0105                     	;# 
   271     0107                     	;# 
   272     0108                     	;# 
   273     0109                     	;# 
   274     010C                     	;# 
   275     010C                     	;# 
   276     010D                     	;# 
   277     010E                     	;# 
   278     010F                     	;# 
   279     0185                     	;# 
   280     0187                     	;# 
   281     0188                     	;# 
   282     0189                     	;# 
   283     018C                     	;# 
   284     018D                     	;# 
   285     0019                     _TXREG	set	25
   286     0018                     _RCSTAbits	set	24
   287     0008                     _PORTD	set	8
   288     001A                     _RCREG	set	26
   289     0006                     _PORTB	set	6
   290     000C                     _PIR1bits	set	12
   291     008F                     _OSCCONbits	set	143
   292     0098                     _TXSTAbits	set	152
   293     0099                     _SPBRG	set	153
   294     0088                     _TRISD	set	136
   295     0086                     _TRISB	set	134
   296     0189                     _ANSELH	set	393
   297     0188                     _ANSEL	set	392
   298                           
   299                           	psect	strings
   300     0003                     __pstrings:
   301     0003                     stringtab:
   302     0003                     __stringtab:
   303     0003                     stringcode:	
   304                           ;	String table - string pointers are 1 byte each
   305                           
   306     0003                     stringdir:
   307     0003  3000               	movlw	high stringdir
   308     0004  008A               	movwf	10
   309     0005  0804               	movf	4,w
   310     0006  0A84               	incf	4,f
   311     0007  0782               	addwf	2,f
   312     0008                     __stringbase:
   313     0008  3400               	retlw	0
   314     0009                     __end_of__stringtab:
   315     0009                     STR_1:
   316     0009  344D               	retlw	77	;'M'
   317     000A  3445               	retlw	69	;'E'
   318     000B  344E               	retlw	78	;'N'
   319     000C  3455               	retlw	85	;'U'
   320     000D  340D               	retlw	13
   321     000E  3448               	retlw	72	;'H'
   322     000F  344F               	retlw	79	;'O'
   323     0010  344C               	retlw	76	;'L'
   324     0011  3441               	retlw	65	;'A'
   325     0012  3400               	retlw	0
   326     000E                     
   327                           	psect	cinit
   328     07FA                     start_initialization:	
   329                           ; #config settings
   330                           
   331     07FA                     __initialization:
   332                           
   333                           ; Clear objects allocated to COMMON
   334     07FA  01F4               	clrf	__pbssCOMMON& (0+127)
   335     07FB  01F5               	clrf	(__pbssCOMMON+1)& (0+127)
   336     07FC                     end_of_initialization:	
   337                           ;End of C runtime variable initialization code
   338                           
   339     07FC                     __end_of__initialization:
   340     07FC  0183               	clrf	3
   341     07FD  120A  118A  2FCE   	ljmp	_main	;jump to C main() function
   342                           
   343                           	psect	bssCOMMON
   344     0074                     __pbssCOMMON:
   345     0074                     _i:
   346     0074                     	ds	2
   347                           
   348                           	psect	cstackCOMMON
   349     0070                     __pcstackCOMMON:
   350     0070                     ?_setup:
   351     0070                     ??_setup:	
   352                           ; 1 bytes @ 0x0
   353                           
   354     0070                     ?_setupUART:	
   355                           ; 1 bytes @ 0x0
   356                           
   357     0070                     ??_setupUART:	
   358                           ; 1 bytes @ 0x0
   359                           
   360     0070                     ?_cadena:	
   361                           ; 1 bytes @ 0x0
   362                           
   363     0070                     ??_cadena:	
   364                           ; 1 bytes @ 0x0
   365                           
   366     0070                     ?_main:	
   367                           ; 1 bytes @ 0x0
   368                           
   369                           
   370                           ; 1 bytes @ 0x0
   371     0070                     	ds	1
   372     0071                     cadena@cursor:
   373                           
   374                           ; 1 bytes @ 0x1
   375     0071                     	ds	1
   376     0072                     ??_main:
   377                           
   378                           ; 1 bytes @ 0x2
   379     0072                     	ds	2
   380                           
   381                           	psect	maintext
   382     07CE                     __pmaintext:	
   383 ;;
   384 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   385 ;;
   386 ;; *************** function _main *****************
   387 ;; Defined at:
   388 ;;		line 38 in file "main.c"
   389 ;; Parameters:    Size  Location     Type
   390 ;;		None
   391 ;; Auto vars:     Size  Location     Type
   392 ;;		None
   393 ;; Return value:  Size  Location     Type
   394 ;;                  1    wreg      void 
   395 ;; Registers used:
   396 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   397 ;; Tracked objects:
   398 ;;		On entry : B00/0
   399 ;;		On exit  : 0/0
   400 ;;		Unchanged: 0/0
   401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   402 ;;      Params:         0       0       0       0       0
   403 ;;      Locals:         0       0       0       0       0
   404 ;;      Temps:          2       0       0       0       0
   405 ;;      Totals:         2       0       0       0       0
   406 ;;Total ram usage:        2 bytes
   407 ;; Hardware stack levels required when called: 2
   408 ;; This function calls:
   409 ;;		_cadena
   410 ;;		_setup
   411 ;;		_setupUART
   412 ;; This function is called by:
   413 ;;		Startup code after reset
   414 ;; This function uses a non-reentrant model
   415 ;;
   416                           
   417     07CE                     _main:	
   418                           ;psect for function _main
   419                           
   420     07CE                     l703:	
   421                           ;incstack = 0
   422                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   423                           
   424                           
   425                           ;main.c: 39:     setup();
   426     07CE  120A  118A  279C  120A  118A  	fcall	_setup
   427     07D3                     l705:
   428                           
   429                           ;main.c: 40:     setupUART();
   430     07D3  120A  118A  278C  120A  118A  	fcall	_setupUART
   431     07D8                     l707:
   432                           
   433                           ;main.c: 41:     cadena("MENU\rHOLA");
   434     07D8  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   435     07D9  120A  118A  27AD  120A  118A  	fcall	_cadena
   436     07DE                     l709:
   437                           
   438                           ;main.c: 42:     cadena("HOLA");
   439     07DE  3006               	movlw	(low (((STR_1+5)-__stringbase)| (0+32768)))& (0+255)
   440     07DF  120A  118A  27AD  120A  118A  	fcall	_cadena
   441     07E4                     l711:
   442                           
   443                           ;main.c: 45:         if(PIR1bits.RCIF == 1){
   444     07E4  1283               	bcf	3,5	;RP0=0, select bank0
   445     07E5  1303               	bcf	3,6	;RP1=0, select bank0
   446     07E6  1E8C               	btfss	12,5	;volatile
   447     07E7  2FE9               	goto	u61
   448     07E8  2FEA               	goto	u60
   449     07E9                     u61:
   450     07E9  2FED               	goto	l40
   451     07EA                     u60:
   452     07EA                     l713:
   453                           
   454                           ;main.c: 46:             PORTB = RCREG;
   455     07EA  081A               	movf	26,w	;volatile
   456     07EB  0086               	movwf	6	;volatile
   457     07EC                     l715:
   458                           
   459                           ;main.c: 47:             PIR1bits.RCIF = 0;}
   460     07EC  128C               	bcf	12,5	;volatile
   461     07ED                     l40:
   462                           
   463                           ;main.c: 49:             _delay((unsigned long)((50)*(8000000/4000.0)));
   464     07ED  3082               	movlw	130
   465     07EE  00F3               	movwf	??_main+1
   466     07EF  30DD               	movlw	221
   467     07F0  00F2               	movwf	??_main
   468     07F1                     u77:
   469     07F1  0BF2               	decfsz	??_main,f
   470     07F2  2FF1               	goto	u77
   471     07F3  0BF3               	decfsz	??_main+1,f
   472     07F4  2FF1               	goto	u77
   473     07F5  2FF6               	nop2
   474     07F6  2FE4               	goto	l711
   475     07F7  120A  118A  2800   	ljmp	start
   476     07FA                     __end_of_main:
   477                           
   478                           	psect	text1
   479     078C                     __ptext1:	
   480 ;; *************** function _setupUART *****************
   481 ;; Defined at:
   482 ;;		line 64 in file "main.c"
   483 ;; Parameters:    Size  Location     Type
   484 ;;		None
   485 ;; Auto vars:     Size  Location     Type
   486 ;;		None
   487 ;; Return value:  Size  Location     Type
   488 ;;                  1    wreg      void 
   489 ;; Registers used:
   490 ;;		wreg
   491 ;; Tracked objects:
   492 ;;		On entry : 0/0
   493 ;;		On exit  : 0/0
   494 ;;		Unchanged: 0/0
   495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   496 ;;      Params:         0       0       0       0       0
   497 ;;      Locals:         0       0       0       0       0
   498 ;;      Temps:          0       0       0       0       0
   499 ;;      Totals:         0       0       0       0       0
   500 ;;Total ram usage:        0 bytes
   501 ;; Hardware stack levels used: 1
   502 ;; This function calls:
   503 ;;		Nothing
   504 ;; This function is called by:
   505 ;;		_main
   506 ;; This function uses a non-reentrant model
   507 ;;
   508                           
   509     078C                     _setupUART:	
   510                           ;psect for function _setupUART
   511                           
   512     078C                     l657:	
   513                           ;incstack = 0
   514                           ; Regs used in _setupUART: [wreg]
   515                           
   516                           
   517                           ;main.c: 67:     SPBRG = 12;
   518     078C  300C               	movlw	12
   519     078D  1683               	bsf	3,5	;RP0=1, select bank1
   520     078E  1303               	bcf	3,6	;RP1=0, select bank1
   521     078F  0099               	movwf	25	;volatile
   522     0790                     l659:
   523                           
   524                           ;main.c: 71:     TXSTAbits.SYNC = 0;
   525     0790  1218               	bcf	24,4	;volatile
   526     0791                     l661:
   527                           
   528                           ;main.c: 72:     RCSTAbits.SPEN = 1;
   529     0791  1283               	bcf	3,5	;RP0=0, select bank0
   530     0792  1303               	bcf	3,6	;RP1=0, select bank0
   531     0793  1798               	bsf	24,7	;volatile
   532     0794                     l663:
   533                           
   534                           ;main.c: 78:     TXSTAbits.TXEN = 1;
   535     0794  1683               	bsf	3,5	;RP0=1, select bank1
   536     0795  1303               	bcf	3,6	;RP1=0, select bank1
   537     0796  1698               	bsf	24,5	;volatile
   538     0797                     l665:
   539                           
   540                           ;main.c: 79:     PIR1bits.TXIF = 0;
   541     0797  1283               	bcf	3,5	;RP0=0, select bank0
   542     0798  1303               	bcf	3,6	;RP1=0, select bank0
   543     0799  120C               	bcf	12,4	;volatile
   544     079A                     l667:
   545                           
   546                           ;main.c: 80:     RCSTAbits.CREN = 1;
   547     079A  1618               	bsf	24,4	;volatile
   548     079B                     l49:
   549     079B  0008               	return
   550     079C                     __end_of_setupUART:
   551                           
   552                           	psect	text2
   553     079C                     __ptext2:	
   554 ;; *************** function _setup *****************
   555 ;; Defined at:
   556 ;;		line 55 in file "main.c"
   557 ;; Parameters:    Size  Location     Type
   558 ;;		None
   559 ;; Auto vars:     Size  Location     Type
   560 ;;		None
   561 ;; Return value:  Size  Location     Type
   562 ;;                  1    wreg      void 
   563 ;; Registers used:
   564 ;;		status,2
   565 ;; Tracked objects:
   566 ;;		On entry : 0/0
   567 ;;		On exit  : 0/0
   568 ;;		Unchanged: 0/0
   569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   570 ;;      Params:         0       0       0       0       0
   571 ;;      Locals:         0       0       0       0       0
   572 ;;      Temps:          0       0       0       0       0
   573 ;;      Totals:         0       0       0       0       0
   574 ;;Total ram usage:        0 bytes
   575 ;; Hardware stack levels used: 1
   576 ;; This function calls:
   577 ;;		Nothing
   578 ;; This function is called by:
   579 ;;		_main
   580 ;; This function uses a non-reentrant model
   581 ;;
   582                           
   583     079C                     _setup:	
   584                           ;psect for function _setup
   585                           
   586     079C                     l655:	
   587                           ;incstack = 0
   588                           ; Regs used in _setup: [status,2]
   589                           
   590                           
   591                           ;main.c: 56:     ANSEL = 0;
   592     079C  1683               	bsf	3,5	;RP0=1, select bank3
   593     079D  1703               	bsf	3,6	;RP1=1, select bank3
   594     079E  0188               	clrf	8	;volatile
   595                           
   596                           ;main.c: 57:     ANSELH = 0;
   597     079F  0189               	clrf	9	;volatile
   598                           
   599                           ;main.c: 58:     TRISB = 0;
   600     07A0  1683               	bsf	3,5	;RP0=1, select bank1
   601     07A1  1303               	bcf	3,6	;RP1=0, select bank1
   602     07A2  0186               	clrf	6	;volatile
   603                           
   604                           ;main.c: 59:     PORTB = 0;
   605     07A3  1283               	bcf	3,5	;RP0=0, select bank0
   606     07A4  1303               	bcf	3,6	;RP1=0, select bank0
   607     07A5  0186               	clrf	6	;volatile
   608                           
   609                           ;main.c: 60:     TRISD = 0;
   610     07A6  1683               	bsf	3,5	;RP0=1, select bank1
   611     07A7  1303               	bcf	3,6	;RP1=0, select bank1
   612     07A8  0188               	clrf	8	;volatile
   613                           
   614                           ;main.c: 61:     PORTD = 0;
   615     07A9  1283               	bcf	3,5	;RP0=0, select bank0
   616     07AA  1303               	bcf	3,6	;RP1=0, select bank0
   617     07AB  0188               	clrf	8	;volatile
   618     07AC                     l46:
   619     07AC  0008               	return
   620     07AD                     __end_of_setup:
   621                           
   622                           	psect	text3
   623     07AD                     __ptext3:	
   624 ;; *************** function _cadena *****************
   625 ;; Defined at:
   626 ;;		line 83 in file "main.c"
   627 ;; Parameters:    Size  Location     Type
   628 ;;  cursor          1    wreg     PTR unsigned char 
   629 ;;		 -> STR_2(5), STR_1(10), 
   630 ;; Auto vars:     Size  Location     Type
   631 ;;  cursor          1    1[COMMON] PTR unsigned char 
   632 ;;		 -> STR_2(5), STR_1(10), 
   633 ;; Return value:  Size  Location     Type
   634 ;;                  1    wreg      void 
   635 ;; Registers used:
   636 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
   637 ;; Tracked objects:
   638 ;;		On entry : 0/0
   639 ;;		On exit  : 0/0
   640 ;;		Unchanged: 0/0
   641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   642 ;;      Params:         0       0       0       0       0
   643 ;;      Locals:         1       0       0       0       0
   644 ;;      Temps:          1       0       0       0       0
   645 ;;      Totals:         2       0       0       0       0
   646 ;;Total ram usage:        2 bytes
   647 ;; Hardware stack levels used: 2
   648 ;; This function calls:
   649 ;;		Nothing
   650 ;; This function is called by:
   651 ;;		_main
   652 ;; This function uses a non-reentrant model
   653 ;;
   654                           
   655     07AD                     _cadena:	
   656                           ;psect for function _cadena
   657                           
   658                           
   659                           ;incstack = 0
   660                           ; Regs used in _cadena: [wreg-fsr0h+status,2+status,0+pclath]
   661                           ;cadena@cursor stored from wreg
   662     07AD  00F1               	movwf	cadena@cursor
   663     07AE                     l695:
   664                           
   665                           ;main.c: 84:     while (*cursor != '\0'){
   666     07AE  2FC1               	goto	l701
   667     07AF                     l54:
   668     07AF  1283               	bcf	3,5	;RP0=0, select bank0
   669     07B0  1303               	bcf	3,6	;RP1=0, select bank0
   670     07B1  1E0C               	btfss	12,4	;volatile
   671     07B2  2FB4               	goto	u41
   672     07B3  2FB5               	goto	u40
   673     07B4                     u41:
   674     07B4  2FAF               	goto	l54
   675     07B5                     u40:
   676     07B5                     l697:
   677                           
   678                           ;main.c: 86:             TXREG = *cursor;
   679     07B5  0871               	movf	cadena@cursor,w
   680     07B6  0084               	movwf	4
   681     07B7  120A  118A  2003  120A  118A  	fcall	stringdir
   682     07BC  0099               	movwf	25	;volatile
   683     07BD                     l699:
   684                           
   685                           ;main.c: 87:             *cursor++;
   686     07BD  3001               	movlw	1
   687     07BE  00F0               	movwf	??_cadena
   688     07BF  0870               	movf	??_cadena,w
   689     07C0  07F1               	addwf	cadena@cursor,f
   690     07C1                     l701:
   691                           
   692                           ;main.c: 84:     while (*cursor != '\0'){
   693     07C1  0871               	movf	cadena@cursor,w
   694     07C2  0084               	movwf	4
   695     07C3  120A  118A  2003  120A  118A  	fcall	stringdir
   696     07C8  3A00               	xorlw	0
   697     07C9  1D03               	skipz
   698     07CA  2FCC               	goto	u51
   699     07CB  2FCD               	goto	u50
   700     07CC                     u51:
   701     07CC  2FAF               	goto	l54
   702     07CD                     u50:
   703     07CD                     l58:
   704     07CD  0008               	return
   705     07CE                     __end_of_cadena:
   706     007E                     btemp	set	126	;btemp
   707     007E                     wtemp0	set	126
   708                           
   709                           	psect	idloc
   710                           
   711                           ;Config register IDLOC0 @ 0x2000
   712                           ;	unspecified, using default values
   713     2000                     	org	8192
   714     2000  3FFF               	dw	16383
   715                           
   716                           ;Config register IDLOC1 @ 0x2001
   717                           ;	unspecified, using default values
   718     2001                     	org	8193
   719     2001  3FFF               	dw	16383
   720                           
   721                           ;Config register IDLOC2 @ 0x2002
   722                           ;	unspecified, using default values
   723     2002                     	org	8194
   724     2002  3FFF               	dw	16383
   725                           
   726                           ;Config register IDLOC3 @ 0x2003
   727                           ;	unspecified, using default values
   728     2003                     	org	8195
   729     2003  3FFF               	dw	16383
   730                           
   731                           	psect	config
   732                           
   733                           ;Config register CONFIG1 @ 0x2007
   734                           ;	Oscillator Selection bits
   735                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   736                           ;	Watchdog Timer Enable bit
   737                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   738                           ;	Power-up Timer Enable bit
   739                           ;	PWRTE = OFF, PWRT disabled
   740                           ;	RE3/MCLR pin function select bit
   741                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   742                           ;	Code Protection bit
   743                           ;	CP = OFF, Program memory code protection is disabled
   744                           ;	Data Code Protection bit
   745                           ;	CPD = OFF, Data memory code protection is disabled
   746                           ;	Brown Out Reset Selection bits
   747                           ;	BOREN = OFF, BOR disabled
   748                           ;	Internal External Switchover bit
   749                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   750                           ;	Fail-Safe Clock Monitor Enabled bit
   751                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   752                           ;	Low Voltage Programming Enable bit
   753                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   754                           ;	In-Circuit Debugger Mode bit
   755                           ;	DEBUG = 0x1, unprogramme   756     2007                     	org	8199
   757     2007  20D4               	dw	8404
   758                           
   759                           ;Config register CONFIG2 @ 0x2008
   760                           ;	Brown-out Reset Selection bit
   761                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   762                           ;	Flash Program Memory Self Write Enable bits
   763                           ;	WRT = OFF, Write protection off
   764     2008                     	org	8200
   765     2008  3FFF               	dw	16383

Data Sizes:
    Strings     10
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       6
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    cadena@cursor	PTR unsigned char  size(1) Largest target is 10
		 -> STR_2(CODE[5]), STR_1(CODE[10]), 


Critical Paths under _main in COMMON

    _main->_cadena

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     111
                                              2 COMMON     2     2      0
                             _cadena
                              _setup
                          _setupUART
 ---------------------------------------------------------------------------------
 (1) _setupUART                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _cadena                                               2     2      0     111
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _cadena
   _setup
   _setupUART

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      4       6       1       42.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       6       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       6      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue Oct 25 00:40:43 2022

                      _i 0074                        pc 0002                       l40 07ED  
                     l54 07AF                       l46 07AC                       l49 079B  
                     l58 07CD                       u40 07B5                       u41 07B4  
                     u50 07CD                       u51 07CC                       u60 07EA  
                     u61 07E9                       u77 07F1                       fsr 0004  
                    l701 07C1                      l711 07E4                      l703 07CE  
                    l713 07EA                      l705 07D3                      l715 07EC  
                    l707 07D8                      l661 0791                      l709 07DE  
                    l655 079C                      l663 0794                      l665 0797  
                    l657 078C                      l667 079A                      l659 0790  
                    l695 07AE                      l697 07B5                      l699 07BD  
                    fsr0 0004                     STR_1 0009                     STR_2 000E  
                   _main 07CE                     btemp 007E                     start 0000  
                  ?_main 0070                    _ANSEL 0188                    _RCREG 001A  
                  _SPBRG 0099                    _PORTB 0006                    _PORTD 0008  
                  _TRISB 0086                    _TRISD 0088                    _TXREG 0019  
                  _setup 079C                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 07FA             __end_of_main 07FA  
                 ??_main 0072                   ?_setup 0070                   _ANSELH 0189  
                 _cadena 07AD  __end_of__initialization 07FC           __pcstackCOMMON 0070  
          __end_of_setup 07AD                  ??_setup 0070               __pmaintext 07CE  
                ?_cadena 0070               __stringtab 0003             cadena@cursor 0071  
                __ptext1 078C                  __ptext2 079C                  __ptext3 07AD  
   end_of_initialization 07FC        __end_of_setupUART 079C                _RCSTAbits 0018  
              _TXSTAbits 0098           __end_of_cadena 07CE      start_initialization 07FA  
               ??_cadena 0070              __pbssCOMMON 0074                ___latbits 0002  
              __pstrings 0003                 _PIR1bits 000C                _setupUART 078C  
            __stringbase 0008               ?_setupUART 0070       __end_of__stringtab 0009  
              stringcode 0003               _OSCCONbits 008F              ??_setupUART 0070  
               stringdir 0003                 stringtab 0003  
