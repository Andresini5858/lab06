

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sun Oct 30 11:00:12 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	intentry,global,class=CODE,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    23                           	dabs	1,0x7E,2
    24     0000                     
    25                           ; Version 2.40
    26                           ; Generated 17/11/2021 GMT
    27                           ; 
    28                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution. Publication is not required when
    42                           ;        this file is used in an embedded application.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC16F887 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60     0000                     	;# 
    61     0001                     	;# 
    62     0002                     	;# 
    63     0003                     	;# 
    64     0004                     	;# 
    65     0005                     	;# 
    66     0006                     	;# 
    67     0007                     	;# 
    68     0008                     	;# 
    69     0009                     	;# 
    70     000A                     	;# 
    71     000B                     	;# 
    72     000C                     	;# 
    73     000D                     	;# 
    74     000E                     	;# 
    75     000E                     	;# 
    76     000F                     	;# 
    77     0010                     	;# 
    78     0011                     	;# 
    79     0012                     	;# 
    80     0013                     	;# 
    81     0014                     	;# 
    82     0015                     	;# 
    83     0015                     	;# 
    84     0016                     	;# 
    85     0017                     	;# 
    86     0018                     	;# 
    87     0019                     	;# 
    88     001A                     	;# 
    89     001B                     	;# 
    90     001B                     	;# 
    91     001C                     	;# 
    92     001D                     	;# 
    93     001E                     	;# 
    94     001F                     	;# 
    95     0081                     	;# 
    96     0085                     	;# 
    97     0086                     	;# 
    98     0087                     	;# 
    99     0088                     	;# 
   100     0089                     	;# 
   101     008C                     	;# 
   102     008D                     	;# 
   103     008E                     	;# 
   104     008F                     	;# 
   105     0090                     	;# 
   106     0091                     	;# 
   107     0092                     	;# 
   108     0093                     	;# 
   109     0093                     	;# 
   110     0093                     	;# 
   111     0094                     	;# 
   112     0095                     	;# 
   113     0096                     	;# 
   114     0097                     	;# 
   115     0098                     	;# 
   116     0099                     	;# 
   117     009A                     	;# 
   118     009B                     	;# 
   119     009C                     	;# 
   120     009D                     	;# 
   121     009E                     	;# 
   122     009F                     	;# 
   123     0105                     	;# 
   124     0107                     	;# 
   125     0108                     	;# 
   126     0109                     	;# 
   127     010C                     	;# 
   128     010C                     	;# 
   129     010D                     	;# 
   130     010E                     	;# 
   131     010F                     	;# 
   132     0185                     	;# 
   133     0187                     	;# 
   134     0188                     	;# 
   135     0189                     	;# 
   136     018C                     	;# 
   137     018D                     	;# 
   138     0000                     	;# 
   139     0001                     	;# 
   140     0002                     	;# 
   141     0003                     	;# 
   142     0004                     	;# 
   143     0005                     	;# 
   144     0006                     	;# 
   145     0007                     	;# 
   146     0008                     	;# 
   147     0009                     	;# 
   148     000A                     	;# 
   149     000B                     	;# 
   150     000C                     	;# 
   151     000D                     	;# 
   152     000E                     	;# 
   153     000E                     	;# 
   154     000F                     	;# 
   155     0010                     	;# 
   156     0011                     	;# 
   157     0012                     	;# 
   158     0013                     	;# 
   159     0014                     	;# 
   160     0015                     	;# 
   161     0015                     	;# 
   162     0016                     	;# 
   163     0017                     	;# 
   164     0018                     	;# 
   165     0019                     	;# 
   166     001A                     	;# 
   167     001B                     	;# 
   168     001B                     	;# 
   169     001C                     	;# 
   170     001D                     	;# 
   171     001E                     	;# 
   172     001F                     	;# 
   173     0081                     	;# 
   174     0085                     	;# 
   175     0086                     	;# 
   176     0087                     	;# 
   177     0088                     	;# 
   178     0089                     	;# 
   179     008C                     	;# 
   180     008D                     	;# 
   181     008E                     	;# 
   182     008F                     	;# 
   183     0090                     	;# 
   184     0091                     	;# 
   185     0092                     	;# 
   186     0093                     	;# 
   187     0093                     	;# 
   188     0093                     	;# 
   189     0094                     	;# 
   190     0095                     	;# 
   191     0096                     	;# 
   192     0097                     	;# 
   193     0098                     	;# 
   194     0099                     	;# 
   195     009A                     	;# 
   196     009B                     	;# 
   197     009C                     	;# 
   198     009D                     	;# 
   199     009E                     	;# 
   200     009F                     	;# 
   201     0105                     	;# 
   202     0107                     	;# 
   203     0108                     	;# 
   204     0109                     	;# 
   205     010C                     	;# 
   206     010C                     	;# 
   207     010D                     	;# 
   208     010E                     	;# 
   209     010F                     	;# 
   210     0185                     	;# 
   211     0187                     	;# 
   212     0188                     	;# 
   213     0189                     	;# 
   214     018C                     	;# 
   215     018D                     	;# 
   216     0000                     	;# 
   217     0001                     	;# 
   218     0002                     	;# 
   219     0003                     	;# 
   220     0004                     	;# 
   221     0005                     	;# 
   222     0006                     	;# 
   223     0007                     	;# 
   224     0008                     	;# 
   225     0009                     	;# 
   226     000A                     	;# 
   227     000B                     	;# 
   228     000C                     	;# 
   229     000D                     	;# 
   230     000E                     	;# 
   231     000E                     	;# 
   232     000F                     	;# 
   233     0010                     	;# 
   234     0011                     	;# 
   235     0012                     	;# 
   236     0013                     	;# 
   237     0014                     	;# 
   238     0015                     	;# 
   239     0015                     	;# 
   240     0016                     	;# 
   241     0017                     	;# 
   242     0018                     	;# 
   243     0019                     	;# 
   244     001A                     	;# 
   245     001B                     	;# 
   246     001B                     	;# 
   247     001C                     	;# 
   248     001D                     	;# 
   249     001E                     	;# 
   250     001F                     	;# 
   251     0081                     	;# 
   252     0085                     	;# 
   253     0086                     	;# 
   254     0087                     	;# 
   255     0088                     	;# 
   256     0089                     	;# 
   257     008C                     	;# 
   258     008D                     	;# 
   259     008E                     	;# 
   260     008F                     	;# 
   261     0090                     	;# 
   262     0091                     	;# 
   263     0092                     	;# 
   264     0093                     	;# 
   265     0093                     	;# 
   266     0093                     	;# 
   267     0094                     	;# 
   268     0095                     	;# 
   269     0096                     	;# 
   270     0097                     	;# 
   271     0098                     	;# 
   272     0099                     	;# 
   273     009A                     	;# 
   274     009B                     	;# 
   275     009C                     	;# 
   276     009D                     	;# 
   277     009E                     	;# 
   278     009F                     	;# 
   279     0105                     	;# 
   280     0107                     	;# 
   281     0108                     	;# 
   282     0109                     	;# 
   283     010C                     	;# 
   284     010C                     	;# 
   285     010D                     	;# 
   286     010E                     	;# 
   287     010F                     	;# 
   288     0185                     	;# 
   289     0187                     	;# 
   290     0188                     	;# 
   291     0189                     	;# 
   292     018C                     	;# 
   293     018D                     	;# 
   294                           
   295                           	psect	idataBANK0
   296     029E                     __pidataBANK0:
   297                           
   298                           ;initializer for _ascii
   299     029E  3400               	retlw	0
   300     029F  3400               	retlw	0
   301     02A0  3401               	retlw	1
   302     02A1  3400               	retlw	0
   303     02A2  3402               	retlw	2
   304     02A3  3400               	retlw	0
   305     02A4  3403               	retlw	3
   306     02A5  3400               	retlw	0
   307     02A6  3404               	retlw	4
   308     02A7  3400               	retlw	0
   309     02A8  3405               	retlw	5
   310     02A9  3400               	retlw	0
   311     02AA  3407               	retlw	7
   312     02AB  3400               	retlw	0
   313     02AC  3408               	retlw	8
   314     02AD  3400               	retlw	0
   315     02AE  3409               	retlw	9
   316     02AF  3400               	retlw	0
   317     02B0  3400               	retlw	0
   318     02B1  3400               	retlw	0
   319     0018                     _RCSTAbits	set	24
   320     000B                     _INTCONbits	set	11
   321     0006                     _PORTB	set	6
   322     0019                     _TXREG	set	25
   323     001F                     _ADCON0bits	set	31
   324     001A                     _RCREG	set	26
   325     001E                     _ADRESH	set	30
   326     000C                     _PIR1bits	set	12
   327     0098                     _TXSTAbits	set	152
   328     0099                     _SPBRG	set	153
   329     009F                     _ADCON1bits	set	159
   330     008C                     _PIE1bits	set	140
   331     008F                     _OSCCONbits	set	143
   332     0086                     _TRISB	set	134
   333     0189                     _ANSELH	set	393
   334     0188                     _ANSEL	set	392
   335                           
   336                           	psect	strings
   337     0100                     __pstrings:
   338     0100                     stringtab:
   339     0100                     __stringtab:
   340     0100                     stringcode:	
   341                           ;	String table - string pointers are 1 byte each
   342                           
   343     0100                     stringdir:
   344     0100  3001               	movlw	high stringdir
   345     0101  008A               	movwf	10
   346     0102  0804               	movf	4,w
   347     0103  0A84               	incf	4,f
   348     0104  0782               	addwf	2,f
   349     0105                     __stringbase:
   350     0105  3400               	retlw	0
   351     0106                     __end_of__stringtab:
   352     0106                     STR_1:
   353     0106  340A               	retlw	10
   354     0107  342D               	retlw	45	;'-'
   355     0108  342D               	retlw	45	;'-'
   356     0109  342D               	retlw	45	;'-'
   357     010A  342D               	retlw	45	;'-'
   358     010B  342D               	retlw	45	;'-'
   359     010C  342D               	retlw	45	;'-'
   360     010D  342D               	retlw	45	;'-'
   361     010E  342D               	retlw	45	;'-'
   362     010F  342D               	retlw	45	;'-'
   363     0110  342D               	retlw	45	;'-'
   364     0111  342D               	retlw	45	;'-'
   365     0112  342D               	retlw	45	;'-'
   366     0113  342D               	retlw	45	;'-'
   367     0114  344D               	retlw	77	;'M'
   368     0115  3445               	retlw	69	;'E'
   369     0116  344E               	retlw	78	;'N'
   370     0117  3455               	retlw	85	;'U'
   371     0118  342D               	retlw	45	;'-'
   372     0119  342D               	retlw	45	;'-'
   373     011A  342D               	retlw	45	;'-'
   374     011B  342D               	retlw	45	;'-'
   375     011C  342D               	retlw	45	;'-'
   376     011D  342D               	retlw	45	;'-'
   377     011E  342D               	retlw	45	;'-'
   378     011F  342D               	retlw	45	;'-'
   379     0120  342D               	retlw	45	;'-'
   380     0121  342D               	retlw	45	;'-'
   381     0122  342D               	retlw	45	;'-'
   382     0123  342D               	retlw	45	;'-'
   383     0124  342D               	retlw	45	;'-'
   384     0125  342D               	retlw	45	;'-'
   385     0126  342D               	retlw	45	;'-'
   386     0127  342D               	retlw	45	;'-'
   387     0128  342D               	retlw	45	;'-'
   388     0129  342D               	retlw	45	;'-'
   389     012A  340A               	retlw	10
   390     012B  3431               	retlw	49	;'1'
   391     012C  3429               	retlw	41	;')'
   392     012D  3420               	retlw	32	;' '
   393     012E  344C               	retlw	76	;'L'
   394     012F  3465               	retlw	101	;'e'
   395     0130  3465               	retlw	101	;'e'
   396     0131  3472               	retlw	114	;'r'
   397     0132  3420               	retlw	32	;' '
   398     0133  3450               	retlw	80	;'P'
   399     0134  346F               	retlw	111	;'o'
   400     0135  3474               	retlw	116	;'t'
   401     0136  3465               	retlw	101	;'e'
   402     0137  346E               	retlw	110	;'n'
   403     0138  3463               	retlw	99	;'c'
   404     0139  3469               	retlw	105	;'i'
   405     013A  346F               	retlw	111	;'o'
   406     013B  346D               	retlw	109	;'m'
   407     013C  3465               	retlw	101	;'e'
   408     013D  3474               	retlw	116	;'t'
   409     013E  3472               	retlw	114	;'r'
   410     013F  346F               	retlw	111	;'o'
   411     0140  340A               	retlw	10
   412     0141  3432               	retlw	50	;'2'
   413     0142  3429               	retlw	41	;')'
   414     0143  3420               	retlw	32	;' '
   415     0144  3445               	retlw	69	;'E'
   416     0145  346E               	retlw	110	;'n'
   417     0146  3476               	retlw	118	;'v'
   418     0147  3469               	retlw	105	;'i'
   419     0148  3461               	retlw	97	;'a'
   420     0149  3472               	retlw	114	;'r'
   421     014A  3420               	retlw	32	;' '
   422     014B  3441               	retlw	65	;'A'
   423     014C  3453               	retlw	83	;'S'
   424     014D  3443               	retlw	67	;'C'
   425     014E  3449               	retlw	73	;'I'
   426     014F  3449               	retlw	73	;'I'
   427     0150  340A               	retlw	10
   428     0151  3400               	retlw	0
   429     0152                     STR_2:
   430     0152  3449               	retlw	73	;'I'
   431     0153  346E               	retlw	110	;'n'
   432     0154  3467               	retlw	103	;'g'
   433     0155  3472               	retlw	114	;'r'
   434     0156  3465               	retlw	101	;'e'
   435     0157  3473               	retlw	115	;'s'
   436     0158  3465               	retlw	101	;'e'
   437     0159  3420               	retlw	32	;' '
   438     015A  3463               	retlw	99	;'c'
   439     015B  3461               	retlw	97	;'a'
   440     015C  3472               	retlw	114	;'r'
   441     015D  3461               	retlw	97	;'a'
   442     015E  3463               	retlw	99	;'c'
   443     015F  3474               	retlw	116	;'t'
   444     0160  3465               	retlw	101	;'e'
   445     0161  3472               	retlw	114	;'r'
   446     0162  3420               	retlw	32	;' '
   447     0163  3428               	retlw	40	;'('
   448     0164  3473               	retlw	115	;'s'
   449     0165  346F               	retlw	111	;'o'
   450     0166  346C               	retlw	108	;'l'
   451     0167  346F               	retlw	111	;'o'
   452     0168  3420               	retlw	32	;' '
   453     0169  3475               	retlw	117	;'u'
   454     016A  346E               	retlw	110	;'n'
   455     016B  3420               	retlw	32	;' '
   456     016C  3463               	retlw	99	;'c'
   457     016D  3461               	retlw	97	;'a'
   458     016E  3472               	retlw	114	;'r'
   459     016F  3461               	retlw	97	;'a'
   460     0170  3463               	retlw	99	;'c'
   461     0171  3474               	retlw	116	;'t'
   462     0172  3465               	retlw	101	;'e'
   463     0173  3472               	retlw	114	;'r'
   464     0174  3429               	retlw	41	;')'
   465     0175  340A               	retlw	10
   466     0176  3400               	retlw	0
   467     0175                     
   468                           	psect	cinit
   469     0011                     start_initialization:	
   470                           ; #config settings
   471                           
   472     0011                     __initialization:
   473                           
   474                           ; Initialize objects allocated to BANK0
   475     0011  1383               	bcf	3,7	;select IRP bank0
   476     0012  3034               	movlw	low (__pdataBANK0+20)
   477     0013  00FD               	movwf	btemp+-1
   478     0014  3002               	movlw	high __pidataBANK0
   479     0015  00FE               	movwf	btemp
   480     0016  309E               	movlw	low __pidataBANK0
   481     0017  00FF               	movwf	btemp+1
   482     0018  3020               	movlw	low __pdataBANK0
   483     0019  0084               	movwf	4
   484     001A  120A  118A  22B6  120A  118A  	fcall	init_ram0
   485                           
   486                           ; Clear objects allocated to BANK0
   487     001F  01B4               	clrf	__pbssBANK0& (0+127)
   488     0020  01B5               	clrf	(__pbssBANK0+1)& (0+127)
   489     0021  01B6               	clrf	(__pbssBANK0+2)& (0+127)
   490     0022  01B7               	clrf	(__pbssBANK0+3)& (0+127)
   491     0023  01B8               	clrf	(__pbssBANK0+4)& (0+127)
   492     0024  01B9               	clrf	(__pbssBANK0+5)& (0+127)
   493     0025  01BA               	clrf	(__pbssBANK0+6)& (0+127)
   494     0026  01BB               	clrf	(__pbssBANK0+7)& (0+127)
   495     0027  01BC               	clrf	(__pbssBANK0+8)& (0+127)
   496     0028  01BD               	clrf	(__pbssBANK0+9)& (0+127)
   497     0029  01BE               	clrf	(__pbssBANK0+10)& (0+127)
   498     002A  01BF               	clrf	(__pbssBANK0+11)& (0+127)
   499     002B  01C0               	clrf	(__pbssBANK0+12)& (0+127)
   500     002C                     end_of_initialization:	
   501                           ;End of C runtime variable initialization code
   502                           
   503     002C                     __end_of__initialization:
   504     002C  0183               	clrf	3
   505     002D  120A  118A  2830   	ljmp	_main	;jump to C main() function
   506                           
   507                           	psect	bssBANK0
   508     0034                     __pbssBANK0:
   509     0034                     _pot:
   510     0034                     	ds	2
   511     0036                     _unidad:
   512     0036                     	ds	2
   513     0038                     _decena:
   514     0038                     	ds	2
   515     003A                     _centena:
   516     003A                     	ds	2
   517     003C                     _palabra:
   518     003C                     	ds	2
   519     003E                     _flag:
   520     003E                     	ds	1
   521     003F                     _selector:
   522     003F                     	ds	1
   523     0040                     _bandera:
   524     0040                     	ds	1
   525                           
   526                           	psect	dataBANK0
   527     0020                     __pdataBANK0:
   528     0020                     _ascii:
   529     0020                     	ds	20
   530                           
   531                           	psect	inittext
   532     02B2                     init_fetch0:	
   533                           ;	Called with low address in FSR and high address in W
   534                           
   535     02B2  087E               	movf	btemp,w
   536     02B3  008A               	movwf	10
   537     02B4  087F               	movf	btemp+1,w
   538     02B5  0082               	movwf	2
   539     02B6                     init_ram0:	
   540                           ;Called with:
   541                           ;	high address of idata address in btemp 
   542                           ;	low address of idata address in btemp+1 
   543                           ;	low address of data in FSR
   544                           ;	high address + 1 of data in btemp-1
   545                           
   546     02B6  120A  118A  22B2  120A  118A  	fcall	init_fetch0
   547     02BB  0080               	movwf	0
   548     02BC  0A84               	incf	4,f
   549     02BD  0804               	movf	4,w
   550     02BE  067D               	xorwf	btemp+-1,w
   551     02BF  1903               	btfsc	3,2
   552     02C0  3400               	retlw	0
   553     02C1  0AFF               	incf	btemp+1,f
   554     02C2  1903               	btfsc	3,2
   555     02C3  0AFE               	incf	btemp,f
   556     02C4  2AB6               	goto	init_ram0
   557                           
   558                           	psect	cstackCOMMON
   559     0070                     __pcstackCOMMON:
   560     0070                     ?_setup:
   561     0070                     ?_setupADC:	
   562                           ; 1 bytes @ 0x0
   563                           
   564     0070                     ?_setupUART:	
   565                           ; 1 bytes @ 0x0
   566                           
   567     0070                     ?_cadena:	
   568                           ; 1 bytes @ 0x0
   569                           
   570     0070                     ?_isr:	
   571                           ; 1 bytes @ 0x0
   572                           
   573     0070                     ?_main:	
   574                           ; 1 bytes @ 0x0
   575                           
   576     0070                     ?___lwdiv:	
   577                           ; 1 bytes @ 0x0
   578                           
   579     0070                     ___lwdiv@divisor:	
   580                           ; 2 bytes @ 0x0
   581                           
   582                           
   583                           ; 2 bytes @ 0x0
   584     0070                     	ds	2
   585     0072                     ___lwdiv@dividend:
   586                           
   587                           ; 2 bytes @ 0x2
   588     0072                     	ds	2
   589     0074                     ??___lwdiv:
   590                           
   591                           ; 1 bytes @ 0x4
   592     0074                     	ds	1
   593     0075                     ___lwdiv@quotient:
   594                           
   595                           ; 2 bytes @ 0x5
   596     0075                     	ds	2
   597     0077                     ___lwdiv@counter:
   598                           
   599                           ; 1 bytes @ 0x7
   600     0077                     	ds	1
   601     0078                     ?___lwmod:
   602     0078                     ___lwmod@divisor:	
   603                           ; 2 bytes @ 0x8
   604                           
   605                           
   606                           ; 2 bytes @ 0x8
   607     0078                     	ds	2
   608     007A                     ___lwmod@dividend:
   609                           
   610                           ; 2 bytes @ 0xA
   611     007A                     	ds	2
   612     007C                     ??___lwmod:
   613                           
   614                           ; 1 bytes @ 0xC
   615     007C                     	ds	1
   616     007D                     ___lwmod@counter:
   617                           
   618                           ; 1 bytes @ 0xD
   619     007D                     	ds	1
   620                           
   621                           	psect	cstackBANK0
   622     0041                     __pcstackBANK0:
   623     0041                     ??_isr:
   624                           
   625                           ; 1 bytes @ 0x0
   626     0041                     	ds	4
   627     0045                     ??_setup:
   628     0045                     ??_setupADC:	
   629                           ; 1 bytes @ 0x4
   630                           
   631     0045                     ??_setupUART:	
   632                           ; 1 bytes @ 0x4
   633                           
   634     0045                     ??_cadena:	
   635                           ; 1 bytes @ 0x4
   636                           
   637                           
   638                           ; 1 bytes @ 0x4
   639     0045                     	ds	1
   640     0046                     cadena@cursor:
   641                           
   642                           ; 1 bytes @ 0x5
   643     0046                     	ds	1
   644     0047                     ??_main:
   645                           
   646                           ; 1 bytes @ 0x6
   647     0047                     	ds	2
   648                           
   649                           	psect	maintext
   650     0030                     __pmaintext:	
   651 ;;
   652 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   653 ;;
   654 ;; *************** function _main *****************
   655 ;; Defined at:
   656 ;;		line 60 in file "main.c"
   657 ;; Parameters:    Size  Location     Type
   658 ;;		None
   659 ;; Auto vars:     Size  Location     Type
   660 ;;		None
   661 ;; Return value:  Size  Location     Type
   662 ;;                  1    wreg      void 
   663 ;; Registers used:
   664 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   665 ;; Tracked objects:
   666 ;;		On entry : B00/0
   667 ;;		On exit  : 0/0
   668 ;;		Unchanged: 0/0
   669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   670 ;;      Params:         0       0       0       0       0
   671 ;;      Locals:         0       0       0       0       0
   672 ;;      Temps:          0       2       0       0       0
   673 ;;      Totals:         0       2       0       0       0
   674 ;;Total ram usage:        2 bytes
   675 ;; Hardware stack levels required when called: 3
   676 ;; This function calls:
   677 ;;		_cadena
   678 ;;		_setup
   679 ;;		_setupADC
   680 ;;		_setupUART
   681 ;; This function is called by:
   682 ;;		Startup code after reset
   683 ;; This function uses a non-reentrant model
   684 ;;
   685                           
   686     0030                     _main:	
   687                           ;psect for function _main
   688                           
   689     0030                     l963:	
   690                           ;incstack = 0
   691                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   692                           
   693                           
   694                           ;main.c: 61:     setup();
   695     0030  120A  118A  2287  120A  118A  	fcall	_setup
   696                           
   697                           ;main.c: 62:     setupADC();
   698     0035  120A  118A  226F  120A  118A  	fcall	_setupADC
   699                           
   700                           ;main.c: 63:     setupUART();
   701     003A  120A  118A  22C5  120A  118A  	fcall	_setupUART
   702     003F                     l965:
   703                           
   704                           ;main.c: 65:         cadena("\n-------------MENU------------------\n1) Leer Potenciometr
      +                          o\n2) Enviar ASCII\n");
   705     003F  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   706     0040  120A  118A  224E  120A  118A  	fcall	_cadena
   707     0045                     l967:
   708                           
   709                           ;main.c: 66:         bandera = 1;
   710     0045  1283               	bcf	3,5	;RP0=0, select bank0
   711     0046  1303               	bcf	3,6	;RP1=0, select bank0
   712     0047  01C0               	clrf	_bandera
   713     0048  0AC0               	incf	_bandera,f
   714                           
   715                           ;main.c: 67:         while (bandera == 1){
   716     0049  28D2               	goto	l1013
   717     004A                     l73:
   718                           
   719                           ;main.c: 68:                 if (PIR1bits.RCIF == 1){
   720     004A  1E8C               	btfss	12,5	;volatile
   721     004B  284D               	goto	u401
   722     004C  284E               	goto	u400
   723     004D                     u401:
   724     004D  285C               	goto	l973
   725     004E                     u400:
   726     004E                     l969:
   727                           
   728                           ;main.c: 69:                 selector = RCREG;
   729     004E  081A               	movf	26,w	;volatile
   730     004F  00BF               	movwf	_selector
   731     0050                     l971:
   732                           
   733                           ;main.c: 70:                 PIR1bits.RCIF = 0;
   734     0050  128C               	bcf	12,5	;volatile
   735                           
   736                           ;main.c: 71:                 _delay((unsigned long)((10)*(8000000/4000.0)));}
   737     0051  301A               	movlw	26
   738     0052  1283               	bcf	3,5	;RP0=0, select bank0
   739     0053  1303               	bcf	3,6	;RP1=0, select bank0
   740     0054  00C8               	movwf	??_main+1
   741     0055  30F7               	movlw	247
   742     0056  00C7               	movwf	??_main
   743     0057                     u477:
   744     0057  0BC7               	decfsz	??_main,f
   745     0058  2857               	goto	u477
   746     0059  0BC8               	decfsz	??_main+1,f
   747     005A  2857               	goto	u477
   748     005B  285C               	nop2
   749     005C                     l973:
   750                           
   751                           ;main.c: 72:             if (selector == '1'){
   752     005C  3031               	movlw	49
   753     005D  1283               	bcf	3,5	;RP0=0, select bank0
   754     005E  1303               	bcf	3,6	;RP1=0, select bank0
   755     005F  063F               	xorwf	_selector,w
   756     0060  1D03               	btfss	3,2
   757     0061  2863               	goto	u411
   758     0062  2864               	goto	u410
   759     0063                     u411:
   760     0063  28A6               	goto	l991
   761     0064                     u410:
   762     0064                     l975:
   763                           
   764                           ;main.c: 73:                 ADCON0bits.GO = 1;
   765     0064  149F               	bsf	31,1	;volatile
   766     0065                     l977:
   767                           
   768                           ;main.c: 74:                 _delay((unsigned long)((5)*(8000000/4000.0)));
   769     0065  300D               	movlw	13
   770     0066  1283               	bcf	3,5	;RP0=0, select bank0
   771     0067  1303               	bcf	3,6	;RP1=0, select bank0
   772     0068  00C8               	movwf	??_main+1
   773     0069  30FB               	movlw	251
   774     006A  00C7               	movwf	??_main
   775     006B                     u487:
   776     006B  0BC7               	decfsz	??_main,f
   777     006C  286B               	goto	u487
   778     006D  0BC8               	decfsz	??_main+1,f
   779     006E  286B               	goto	u487
   780     006F                     l979:
   781                           
   782                           ;main.c: 75:                 TXREG = ascii[centena]+48;
   783     006F  1283               	bcf	3,5	;RP0=0, select bank0
   784     0070  1303               	bcf	3,6	;RP1=0, select bank0
   785     0071  083A               	movf	_centena,w
   786     0072  00C7               	movwf	??_main
   787     0073  0747               	addwf	??_main,w
   788     0074  3E20               	addlw	(low (_ascii| 0))& (0+255)
   789     0075  0084               	movwf	4
   790     0076  1383               	bcf	3,7	;select IRP bank0
   791     0077  0800               	movf	0,w
   792     0078  3E30               	addlw	48
   793     0079  0099               	movwf	25	;volatile
   794     007A                     l981:
   795                           
   796                           ;main.c: 76:                 _delay((unsigned long)((5)*(8000000/4000.0)));
   797     007A  300D               	movlw	13
   798     007B  1283               	bcf	3,5	;RP0=0, select bank0
   799     007C  1303               	bcf	3,6	;RP1=0, select bank0
   800     007D  00C8               	movwf	??_main+1
   801     007E  30FB               	movlw	251
   802     007F  00C7               	movwf	??_main
   803     0080                     u497:
   804     0080  0BC7               	decfsz	??_main,f
   805     0081  2880               	goto	u497
   806     0082  0BC8               	decfsz	??_main+1,f
   807     0083  2880               	goto	u497
   808                           
   809                           ;main.c: 77:                 TXREG = ascii[decena]+48;
   810     0084  1283               	bcf	3,5	;RP0=0, select bank0
   811     0085  1303               	bcf	3,6	;RP1=0, select bank0
   812     0086  0838               	movf	_decena,w
   813     0087  00C7               	movwf	??_main
   814     0088  0747               	addwf	??_main,w
   815     0089  3E20               	addlw	(low (_ascii| 0))& (0+255)
   816     008A  0084               	movwf	4
   817     008B  1383               	bcf	3,7	;select IRP bank0
   818     008C  0800               	movf	0,w
   819     008D  3E30               	addlw	48
   820     008E  0099               	movwf	25	;volatile
   821     008F                     l983:
   822                           
   823                           ;main.c: 78:                 _delay((unsigned long)((5)*(8000000/4000.0)));
   824     008F  300D               	movlw	13
   825     0090  1283               	bcf	3,5	;RP0=0, select bank0
   826     0091  1303               	bcf	3,6	;RP1=0, select bank0
   827     0092  00C8               	movwf	??_main+1
   828     0093  30FB               	movlw	251
   829     0094  00C7               	movwf	??_main
   830     0095                     u507:
   831     0095  0BC7               	decfsz	??_main,f
   832     0096  2895               	goto	u507
   833     0097  0BC8               	decfsz	??_main+1,f
   834     0098  2895               	goto	u507
   835     0099                     l985:
   836                           
   837                           ;main.c: 79:                 TXREG = ascii[unidad]+48;
   838     0099  1283               	bcf	3,5	;RP0=0, select bank0
   839     009A  1303               	bcf	3,6	;RP1=0, select bank0
   840     009B  0836               	movf	_unidad,w
   841     009C  00C7               	movwf	??_main
   842     009D  0747               	addwf	??_main,w
   843     009E  3E20               	addlw	(low (_ascii| 0))& (0+255)
   844     009F  0084               	movwf	4
   845     00A0  1383               	bcf	3,7	;select IRP bank0
   846     00A1  0800               	movf	0,w
   847     00A2  3E30               	addlw	48
   848     00A3  0099               	movwf	25	;volatile
   849     00A4                     l987:
   850                           
   851                           ;main.c: 80:                 bandera = 0;
   852     00A4  01C0               	clrf	_bandera
   853     00A5                     l989:
   854                           
   855                           ;main.c: 81:                 selector = 0;
   856     00A5  01BF               	clrf	_selector
   857     00A6                     l991:
   858                           
   859                           ;main.c: 84:             if (selector == '2'){
   860     00A6  3032               	movlw	50
   861     00A7  063F               	xorwf	_selector,w
   862     00A8  1D03               	btfss	3,2
   863     00A9  28AB               	goto	u421
   864     00AA  28AC               	goto	u420
   865     00AB                     u421:
   866     00AB  28D2               	goto	l1013
   867     00AC                     u420:
   868     00AC                     l993:
   869                           
   870                           ;main.c: 85:                 cadena("Ingrese caracter (solo un caracter)\n");
   871     00AC  304D               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   872     00AD  120A  118A  224E  120A  118A  	fcall	_cadena
   873                           
   874                           ;main.c: 86:                 cadena("\n");
   875     00B2  3070               	movlw	(low (((STR_2+35)-__stringbase)| (0+32768)))& (0+255)
   876     00B3  120A  118A  224E  120A  118A  	fcall	_cadena
   877     00B8                     l995:
   878                           
   879                           ;main.c: 87:                 flag = 1;
   880     00B8  1283               	bcf	3,5	;RP0=0, select bank0
   881     00B9  1303               	bcf	3,6	;RP1=0, select bank0
   882     00BA  01BE               	clrf	_flag
   883     00BB  0ABE               	incf	_flag,f
   884     00BC                     l997:
   885                           
   886                           ;main.c: 88:                 PIR1bits.RCIF = 0;
   887     00BC  128C               	bcf	12,5	;volatile
   888                           
   889                           ;main.c: 89:                 while (flag == 1){
   890     00BD  28CD               	goto	l1011
   891     00BE                     l78:
   892                           
   893                           ;main.c: 90:                 if (PIR1bits.RCIF == 1 && RCREG != 0){
   894     00BE  1E8C               	btfss	12,5	;volatile
   895     00BF  28C1               	goto	u431
   896     00C0  28C2               	goto	u430
   897     00C1                     u431:
   898     00C1  28CD               	goto	l1011
   899     00C2                     u430:
   900     00C2                     l999:
   901     00C2  081A               	movf	26,w	;volatile
   902     00C3  1903               	btfsc	3,2
   903     00C4  28C6               	goto	u441
   904     00C5  28C7               	goto	u440
   905     00C6                     u441:
   906     00C6  28CD               	goto	l1011
   907     00C7                     u440:
   908     00C7                     l1001:
   909                           
   910                           ;main.c: 91:                 PORTB = RCREG;
   911     00C7  081A               	movf	26,w	;volatile
   912     00C8  0086               	movwf	6	;volatile
   913     00C9                     l1003:
   914                           
   915                           ;main.c: 92:                 PIR1bits.RCIF = 0;
   916     00C9  128C               	bcf	12,5	;volatile
   917     00CA                     l1005:
   918                           
   919                           ;main.c: 93:                 flag = 0;
   920     00CA  01BE               	clrf	_flag
   921     00CB                     l1007:
   922                           
   923                           ;main.c: 94:                 bandera = 0;
   924     00CB  01C0               	clrf	_bandera
   925     00CC                     l1009:
   926                           
   927                           ;main.c: 95:                 selector = 0;}}}
   928     00CC  01BF               	clrf	_selector
   929     00CD                     l1011:
   930                           
   931                           ;main.c: 89:                 while (flag == 1){
   932     00CD  033E               	decf	_flag,w
   933     00CE  1903               	btfsc	3,2
   934     00CF  28D1               	goto	u451
   935     00D0  28D2               	goto	u450
   936     00D1                     u451:
   937     00D1  28BE               	goto	l78
   938     00D2                     u450:
   939     00D2                     l1013:
   940                           
   941                           ;main.c: 67:         while (bandera == 1){
   942     00D2  0340               	decf	_bandera,w
   943     00D3  1903               	btfsc	3,2
   944     00D4  28D6               	goto	u461
   945     00D5  28D7               	goto	u460
   946     00D6                     u461:
   947     00D6  284A               	goto	l73
   948     00D7                     u460:
   949     00D7  283F               	goto	l965
   950     00D8  120A  118A  280E   	ljmp	start
   951     00DB                     __end_of_main:
   952                           
   953                           	psect	text1
   954     02C5                     __ptext1:	
   955 ;; *************** function _setupUART *****************
   956 ;; Defined at:
   957 ;;		line 134 in file "main.c"
   958 ;; Parameters:    Size  Location     Type
   959 ;;		None
   960 ;; Auto vars:     Size  Location     Type
   961 ;;		None
   962 ;; Return value:  Size  Location     Type
   963 ;;                  1    wreg      void 
   964 ;; Registers used:
   965 ;;		wreg
   966 ;; Tracked objects:
   967 ;;		On entry : 0/0
   968 ;;		On exit  : 0/0
   969 ;;		Unchanged: 0/0
   970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   971 ;;      Params:         0       0       0       0       0
   972 ;;      Locals:         0       0       0       0       0
   973 ;;      Temps:          0       0       0       0       0
   974 ;;      Totals:         0       0       0       0       0
   975 ;;Total ram usage:        0 bytes
   976 ;; Hardware stack levels used: 1
   977 ;; Hardware stack levels required when called: 2
   978 ;; This function calls:
   979 ;;		Nothing
   980 ;; This function is called by:
   981 ;;		_main
   982 ;; This function uses a non-reentrant model
   983 ;;
   984                           
   985     02C5                     _setupUART:	
   986                           ;psect for function _setupUART
   987                           
   988     02C5                     l883:	
   989                           ;incstack = 0
   990                           ; Regs used in _setupUART: [wreg]
   991                           
   992                           
   993                           ;main.c: 137:     SPBRG = 12;
   994     02C5  300C               	movlw	12
   995     02C6  1683               	bsf	3,5	;RP0=1, select bank1
   996     02C7  1303               	bcf	3,6	;RP1=0, select bank1
   997     02C8  0099               	movwf	25	;volatile
   998     02C9                     l885:
   999                           
  1000                           ;main.c: 141:     TXSTAbits.SYNC = 0;
  1001     02C9  1218               	bcf	24,4	;volatile
  1002     02CA                     l887:
  1003                           
  1004                           ;main.c: 142:     RCSTAbits.SPEN = 1;
  1005     02CA  1283               	bcf	3,5	;RP0=0, select bank0
  1006     02CB  1303               	bcf	3,6	;RP1=0, select bank0
  1007     02CC  1798               	bsf	24,7	;volatile
  1008     02CD                     l889:
  1009                           
  1010                           ;main.c: 148:     TXSTAbits.TXEN = 1;
  1011     02CD  1683               	bsf	3,5	;RP0=1, select bank1
  1012     02CE  1303               	bcf	3,6	;RP1=0, select bank1
  1013     02CF  1698               	bsf	24,5	;volatile
  1014     02D0                     l891:
  1015                           
  1016                           ;main.c: 149:     PIR1bits.TXIF = 0;
  1017     02D0  1283               	bcf	3,5	;RP0=0, select bank0
  1018     02D1  1303               	bcf	3,6	;RP1=0, select bank0
  1019     02D2  120C               	bcf	12,4	;volatile
  1020     02D3                     l893:
  1021                           
  1022                           ;main.c: 150:     RCSTAbits.CREN = 1;
  1023     02D3  1618               	bsf	24,4	;volatile
  1024     02D4                     l93:
  1025     02D4  0008               	return
  1026     02D5                     __end_of_setupUART:
  1027                           
  1028                           	psect	text2
  1029     026F                     __ptext2:	
  1030 ;; *************** function _setupADC *****************
  1031 ;; Defined at:
  1032 ;;		line 116 in file "main.c"
  1033 ;; Parameters:    Size  Location     Type
  1034 ;;		None
  1035 ;; Auto vars:     Size  Location     Type
  1036 ;;		None
  1037 ;; Return value:  Size  Location     Type
  1038 ;;                  1    wreg      void 
  1039 ;; Registers used:
  1040 ;;		wreg
  1041 ;; Tracked objects:
  1042 ;;		On entry : 0/0
  1043 ;;		On exit  : 0/0
  1044 ;;		Unchanged: 0/0
  1045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1046 ;;      Params:         0       0       0       0       0
  1047 ;;      Locals:         0       0       0       0       0
  1048 ;;      Temps:          0       1       0       0       0
  1049 ;;      Totals:         0       1       0       0       0
  1050 ;;Total ram usage:        1 bytes
  1051 ;; Hardware stack levels used: 1
  1052 ;; Hardware stack levels required when called: 2
  1053 ;; This function calls:
  1054 ;;		Nothing
  1055 ;; This function is called by:
  1056 ;;		_main
  1057 ;; This function uses a non-reentrant model
  1058 ;;
  1059                           
  1060     026F                     _setupADC:	
  1061                           ;psect for function _setupADC
  1062                           
  1063     026F                     l879:	
  1064                           ;incstack = 0
  1065                           ; Regs used in _setupADC: [wreg]
  1066                           
  1067                           
  1068                           ;main.c: 117:     ADCON0bits.ADCS1 = 1;
  1069     026F  1283               	bcf	3,5	;RP0=0, select bank0
  1070     0270  1303               	bcf	3,6	;RP1=0, select bank0
  1071     0271  179F               	bsf	31,7	;volatile
  1072                           
  1073                           ;main.c: 118:     ADCON0bits.ADCS0 = 0;
  1074     0272  131F               	bcf	31,6	;volatile
  1075                           
  1076                           ;main.c: 120:     ADCON1bits.VCFG1 = 0;
  1077     0273  1683               	bsf	3,5	;RP0=1, select bank1
  1078     0274  1303               	bcf	3,6	;RP1=0, select bank1
  1079     0275  129F               	bcf	31,5	;volatile
  1080                           
  1081                           ;main.c: 121:     ADCON1bits.VCFG0 = 0;
  1082     0276  121F               	bcf	31,4	;volatile
  1083                           
  1084                           ;main.c: 123:     ADCON1bits.ADFM = 0;
  1085     0277  139F               	bcf	31,7	;volatile
  1086                           
  1087                           ;main.c: 125:     ADCON0bits.CHS3 = 0;
  1088     0278  1283               	bcf	3,5	;RP0=0, select bank0
  1089     0279  1303               	bcf	3,6	;RP1=0, select bank0
  1090     027A  129F               	bcf	31,5	;volatile
  1091                           
  1092                           ;main.c: 126:     ADCON0bits.CHS2 = 0;
  1093     027B  121F               	bcf	31,4	;volatile
  1094                           
  1095                           ;main.c: 127:     ADCON0bits.CHS1 = 0;
  1096     027C  119F               	bcf	31,3	;volatile
  1097                           
  1098                           ;main.c: 128:     ADCON0bits.CHS0 = 0;
  1099     027D  111F               	bcf	31,2	;volatile
  1100                           
  1101                           ;main.c: 130:     ADCON0bits.ADON = 1;
  1102     027E  141F               	bsf	31,0	;volatile
  1103     027F                     l881:
  1104                           
  1105                           ;main.c: 131:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  1106     027F  3041               	movlw	65
  1107     0280  1283               	bcf	3,5	;RP0=0, select bank0
  1108     0281  1303               	bcf	3,6	;RP1=0, select bank0
  1109     0282  00C5               	movwf	??_setupADC
  1110     0283                     u517:
  1111     0283  0BC5               	decfsz	??_setupADC,f
  1112     0284  2A83               	goto	u517
  1113     0285  2A86               	nop2
  1114     0286                     l90:
  1115     0286  0008               	return
  1116     0287                     __end_of_setupADC:
  1117                           
  1118                           	psect	text3
  1119     0287                     __ptext3:	
  1120 ;; *************** function _setup *****************
  1121 ;; Defined at:
  1122 ;;		line 101 in file "main.c"
  1123 ;; Parameters:    Size  Location     Type
  1124 ;;		None
  1125 ;; Auto vars:     Size  Location     Type
  1126 ;;		None
  1127 ;; Return value:  Size  Location     Type
  1128 ;;                  1    wreg      void 
  1129 ;; Registers used:
  1130 ;;		wreg, status,2, status,0
  1131 ;; Tracked objects:
  1132 ;;		On entry : 0/0
  1133 ;;		On exit  : 0/0
  1134 ;;		Unchanged: 0/0
  1135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1136 ;;      Params:         0       0       0       0       0
  1137 ;;      Locals:         0       0       0       0       0
  1138 ;;      Temps:          0       0       0       0       0
  1139 ;;      Totals:         0       0       0       0       0
  1140 ;;Total ram usage:        0 bytes
  1141 ;; Hardware stack levels used: 1
  1142 ;; Hardware stack levels required when called: 2
  1143 ;; This function calls:
  1144 ;;		Nothing
  1145 ;; This function is called by:
  1146 ;;		_main
  1147 ;; This function uses a non-reentrant model
  1148 ;;
  1149                           
  1150     0287                     _setup:	
  1151                           ;psect for function _setup
  1152                           
  1153     0287                     l859:	
  1154                           ;incstack = 0
  1155                           ; Regs used in _setup: [wreg+status,2+status,0]
  1156                           
  1157                           
  1158                           ;main.c: 102:     ANSEL = 0b00000001;
  1159     0287  3001               	movlw	1
  1160     0288  1683               	bsf	3,5	;RP0=1, select bank3
  1161     0289  1703               	bsf	3,6	;RP1=1, select bank3
  1162     028A  0088               	movwf	8	;volatile
  1163     028B                     l861:
  1164                           
  1165                           ;main.c: 103:     ANSELH = 0;
  1166     028B  0189               	clrf	9	;volatile
  1167     028C                     l863:
  1168                           
  1169                           ;main.c: 104:     TRISB = 0;
  1170     028C  1683               	bsf	3,5	;RP0=1, select bank1
  1171     028D  1303               	bcf	3,6	;RP1=0, select bank1
  1172     028E  0186               	clrf	6	;volatile
  1173     028F                     l865:
  1174                           
  1175                           ;main.c: 105:     PORTB = 0;
  1176     028F  1283               	bcf	3,5	;RP0=0, select bank0
  1177     0290  1303               	bcf	3,6	;RP1=0, select bank0
  1178     0291  0186               	clrf	6	;volatile
  1179     0292                     l867:
  1180                           
  1181                           ;main.c: 107:     OSCCONbits.IRCF = 0b111;
  1182     0292  3070               	movlw	112
  1183     0293  1683               	bsf	3,5	;RP0=1, select bank1
  1184     0294  1303               	bcf	3,6	;RP1=0, select bank1
  1185     0295  048F               	iorwf	15,f	;volatile
  1186     0296                     l869:
  1187                           
  1188                           ;main.c: 108:     OSCCONbits.SCS = 1;
  1189     0296  140F               	bsf	15,0	;volatile
  1190     0297                     l871:
  1191                           
  1192                           ;main.c: 110:     INTCONbits.GIE = 1;
  1193     0297  178B               	bsf	11,7	;volatile
  1194     0298                     l873:
  1195                           
  1196                           ;main.c: 111:     INTCONbits.PEIE = 1;
  1197     0298  170B               	bsf	11,6	;volatile
  1198     0299                     l875:
  1199                           
  1200                           ;main.c: 112:     PIE1bits.ADIE = 1;
  1201     0299  170C               	bsf	12,6	;volatile
  1202     029A                     l877:
  1203                           
  1204                           ;main.c: 113:     PIR1bits.ADIF = 0;
  1205     029A  1283               	bcf	3,5	;RP0=0, select bank0
  1206     029B  1303               	bcf	3,6	;RP1=0, select bank0
  1207     029C  130C               	bcf	12,6	;volatile
  1208     029D                     l87:
  1209     029D  0008               	return
  1210     029E                     __end_of_setup:
  1211                           
  1212                           	psect	text4
  1213     024E                     __ptext4:	
  1214 ;; *************** function _cadena *****************
  1215 ;; Defined at:
  1216 ;;		line 154 in file "main.c"
  1217 ;; Parameters:    Size  Location     Type
  1218 ;;  cursor          1    wreg     PTR unsigned char 
  1219 ;;		 -> STR_3(2), STR_2(37), STR_1(76), 
  1220 ;; Auto vars:     Size  Location     Type
  1221 ;;  cursor          1    5[BANK0 ] PTR unsigned char 
  1222 ;;		 -> STR_3(2), STR_2(37), STR_1(76), 
  1223 ;; Return value:  Size  Location     Type
  1224 ;;                  1    wreg      void 
  1225 ;; Registers used:
  1226 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  1227 ;; Tracked objects:
  1228 ;;		On entry : 0/0
  1229 ;;		On exit  : 0/0
  1230 ;;		Unchanged: 0/0
  1231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1232 ;;      Params:         0       0       0       0       0
  1233 ;;      Locals:         0       1       0       0       0
  1234 ;;      Temps:          0       1       0       0       0
  1235 ;;      Totals:         0       2       0       0       0
  1236 ;;Total ram usage:        2 bytes
  1237 ;; Hardware stack levels used: 1
  1238 ;; Hardware stack levels required when called: 2
  1239 ;; This function calls:
  1240 ;;		Nothing
  1241 ;; This function is called by:
  1242 ;;		_main
  1243 ;; This function uses a non-reentrant model
  1244 ;;
  1245                           
  1246     024E                     _cadena:	
  1247                           ;psect for function _cadena
  1248                           
  1249                           
  1250                           ;incstack = 0
  1251                           ; Regs used in _cadena: [wreg-fsr0h+status,2+status,0+pclath]
  1252                           ;cadena@cursor stored from wreg
  1253     024E  1283               	bcf	3,5	;RP0=0, select bank0
  1254     024F  1303               	bcf	3,6	;RP1=0, select bank0
  1255     0250  00C6               	movwf	cadena@cursor
  1256     0251                     l895:
  1257                           
  1258                           ;main.c: 155:     while (*cursor != '\0'){
  1259     0251  2A62               	goto	l901
  1260     0252                     l98:
  1261     0252  1E0C               	btfss	12,4	;volatile
  1262     0253  2A55               	goto	u241
  1263     0254  2A56               	goto	u240
  1264     0255                     u241:
  1265     0255  2A52               	goto	l98
  1266     0256                     u240:
  1267     0256                     l897:
  1268                           
  1269                           ;main.c: 157:             TXREG = *cursor;
  1270     0256  0846               	movf	cadena@cursor,w
  1271     0257  0084               	movwf	4
  1272     0258  120A  118A  2100  120A  118A  	fcall	stringdir
  1273     025D  0099               	movwf	25	;volatile
  1274     025E                     l899:
  1275                           
  1276                           ;main.c: 158:             *cursor++;
  1277     025E  3001               	movlw	1
  1278     025F  00C5               	movwf	??_cadena
  1279     0260  0845               	movf	??_cadena,w
  1280     0261  07C6               	addwf	cadena@cursor,f
  1281     0262                     l901:
  1282                           
  1283                           ;main.c: 155:     while (*cursor != '\0'){
  1284     0262  0846               	movf	cadena@cursor,w
  1285     0263  0084               	movwf	4
  1286     0264  120A  118A  2100  120A  118A  	fcall	stringdir
  1287     0269  3A00               	xorlw	0
  1288     026A  1D03               	skipz
  1289     026B  2A6D               	goto	u251
  1290     026C  2A6E               	goto	u250
  1291     026D                     u251:
  1292     026D  2A52               	goto	l98
  1293     026E                     u250:
  1294     026E                     l102:
  1295     026E  0008               	return
  1296     026F                     __end_of_cadena:
  1297                           
  1298                           	psect	text5
  1299     0177                     __ptext5:	
  1300 ;; *************** function _isr *****************
  1301 ;; Defined at:
  1302 ;;		line 49 in file "main.c"
  1303 ;; Parameters:    Size  Location     Type
  1304 ;;		None
  1305 ;; Auto vars:     Size  Location     Type
  1306 ;;		None
  1307 ;; Return value:  Size  Location     Type
  1308 ;;                  1    wreg      void 
  1309 ;; Registers used:
  1310 ;;		wreg, status,2, status,0, pclath, cstack
  1311 ;; Tracked objects:
  1312 ;;		On entry : 0/0
  1313 ;;		On exit  : 0/0
  1314 ;;		Unchanged: 0/0
  1315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1316 ;;      Params:         0       0       0       0       0
  1317 ;;      Locals:         0       0       0       0       0
  1318 ;;      Temps:          0       4       0       0       0
  1319 ;;      Totals:         0       4       0       0       0
  1320 ;;Total ram usage:        4 bytes
  1321 ;; Hardware stack levels used: 1
  1322 ;; Hardware stack levels required when called: 1
  1323 ;; This function calls:
  1324 ;;		___lwdiv
  1325 ;;		___lwmod
  1326 ;; This function is called by:
  1327 ;;		Interrupt level 1
  1328 ;; This function uses a non-reentrant model
  1329 ;;
  1330                           
  1331     0177                     _isr:	
  1332                           ;psect for function _isr
  1333                           
  1334     0177                     i1l951:
  1335                           
  1336                           ;main.c: 50:     if (PIR1bits.ADIF == 1){
  1337     0177  1F0C               	btfss	12,6	;volatile
  1338     0178  297A               	goto	u39_21
  1339     0179  297B               	goto	u39_20
  1340     017A                     u39_21:
  1341     017A  29C9               	goto	i1l66
  1342     017B                     u39_20:
  1343     017B                     i1l953:
  1344                           
  1345                           ;main.c: 51:         pot = ADRESH;
  1346     017B  081E               	movf	30,w	;volatile
  1347     017C  00C1               	movwf	??_isr
  1348     017D  01C2               	clrf	??_isr+1
  1349     017E  0841               	movf	??_isr,w
  1350     017F  00B4               	movwf	_pot
  1351     0180  0842               	movf	??_isr+1,w
  1352     0181  00B5               	movwf	_pot+1
  1353     0182                     i1l955:
  1354                           
  1355                           ;main.c: 52:         centena = (pot/100);
  1356     0182  3064               	movlw	100
  1357     0183  00F0               	movwf	___lwdiv@divisor
  1358     0184  3000               	movlw	0
  1359     0185  00F1               	movwf	___lwdiv@divisor+1
  1360     0186  0835               	movf	_pot+1,w
  1361     0187  00F3               	movwf	___lwdiv@dividend+1
  1362     0188  0834               	movf	_pot,w
  1363     0189  00F2               	movwf	___lwdiv@dividend
  1364     018A  120A  118A  21D0  120A  118A  	fcall	___lwdiv
  1365     018F  0871               	movf	?___lwdiv+1,w
  1366     0190  1283               	bcf	3,5	;RP0=0, select bank0
  1367     0191  1303               	bcf	3,6	;RP1=0, select bank0
  1368     0192  00BB               	movwf	_centena+1
  1369     0193  0870               	movf	?___lwdiv,w
  1370     0194  00BA               	movwf	_centena
  1371     0195                     i1l957:
  1372                           
  1373                           ;main.c: 53:         decena = ((pot/10)%10);
  1374     0195  300A               	movlw	10
  1375     0196  00F8               	movwf	___lwmod@divisor
  1376     0197  3000               	movlw	0
  1377     0198  00F9               	movwf	___lwmod@divisor+1
  1378     0199  300A               	movlw	10
  1379     019A  00F0               	movwf	___lwdiv@divisor
  1380     019B  3000               	movlw	0
  1381     019C  00F1               	movwf	___lwdiv@divisor+1
  1382     019D  0835               	movf	_pot+1,w
  1383     019E  00F3               	movwf	___lwdiv@dividend+1
  1384     019F  0834               	movf	_pot,w
  1385     01A0  00F2               	movwf	___lwdiv@dividend
  1386     01A1  120A  118A  21D0  120A  118A  	fcall	___lwdiv
  1387     01A6  0871               	movf	?___lwdiv+1,w
  1388     01A7  00FB               	movwf	___lwmod@dividend+1
  1389     01A8  0870               	movf	?___lwdiv,w
  1390     01A9  00FA               	movwf	___lwmod@dividend
  1391     01AA  120A  118A  2214  120A  118A  	fcall	___lwmod
  1392     01AF  0879               	movf	?___lwmod+1,w
  1393     01B0  1283               	bcf	3,5	;RP0=0, select bank0
  1394     01B1  1303               	bcf	3,6	;RP1=0, select bank0
  1395     01B2  00B9               	movwf	_decena+1
  1396     01B3  0878               	movf	?___lwmod,w
  1397     01B4  00B8               	movwf	_decena
  1398     01B5                     i1l959:
  1399                           
  1400                           ;main.c: 54:         unidad = (pot%10);
  1401     01B5  300A               	movlw	10
  1402     01B6  00F8               	movwf	___lwmod@divisor
  1403     01B7  3000               	movlw	0
  1404     01B8  00F9               	movwf	___lwmod@divisor+1
  1405     01B9  0835               	movf	_pot+1,w
  1406     01BA  00FB               	movwf	___lwmod@dividend+1
  1407     01BB  0834               	movf	_pot,w
  1408     01BC  00FA               	movwf	___lwmod@dividend
  1409     01BD  120A  118A  2214  120A  118A  	fcall	___lwmod
  1410     01C2  0879               	movf	?___lwmod+1,w
  1411     01C3  1283               	bcf	3,5	;RP0=0, select bank0
  1412     01C4  1303               	bcf	3,6	;RP1=0, select bank0
  1413     01C5  00B7               	movwf	_unidad+1
  1414     01C6  0878               	movf	?___lwmod,w
  1415     01C7  00B6               	movwf	_unidad
  1416     01C8                     i1l961:
  1417                           
  1418                           ;main.c: 55:         PIR1bits.ADIF = 0;
  1419     01C8  130C               	bcf	12,6	;volatile
  1420     01C9                     i1l66:
  1421     01C9  0844               	movf	??_isr+3,w
  1422     01CA  008A               	movwf	10
  1423     01CB  0E43               	swapf	??_isr+2,w
  1424     01CC  0083               	movwf	3
  1425     01CD  0EFE               	swapf	btemp,f
  1426     01CE  0E7E               	swapf	btemp,w
  1427     01CF  0009               	retfie
  1428     01D0                     __end_of_isr:
  1429                           
  1430                           	psect	intentry
  1431     0004                     __pintentry:	
  1432                           ;incstack = 0
  1433                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  1434                           
  1435     0004                     interrupt_function:
  1436     007E                     saved_w	set	btemp
  1437     0004  00FE               	movwf	btemp
  1438     0005  0E03               	swapf	3,w
  1439     0006  1283               	bcf	3,5	;RP0=0, select bank0
  1440     0007  1303               	bcf	3,6	;RP1=0, select bank0
  1441     0008  00C3               	movwf	??_isr+2
  1442     0009  080A               	movf	10,w
  1443     000A  00C4               	movwf	??_isr+3
  1444     000B  120A  118A  2977   	ljmp	_isr
  1445                           
  1446                           	psect	text6
  1447     0214                     __ptext6:	
  1448 ;; *************** function ___lwmod *****************
  1449 ;; Defined at:
  1450 ;;		line 5 in file "E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  1451 ;; Parameters:    Size  Location     Type
  1452 ;;  divisor         2    8[COMMON] unsigned int 
  1453 ;;  dividend        2   10[COMMON] unsigned int 
  1454 ;; Auto vars:     Size  Location     Type
  1455 ;;  counter         1   13[COMMON] unsigned char 
  1456 ;; Return value:  Size  Location     Type
  1457 ;;                  2    8[COMMON] unsigned int 
  1458 ;; Registers used:
  1459 ;;		wreg, status,2, status,0
  1460 ;; Tracked objects:
  1461 ;;		On entry : 0/0
  1462 ;;		On exit  : 0/0
  1463 ;;		Unchanged: 0/0
  1464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1465 ;;      Params:         4       0       0       0       0
  1466 ;;      Locals:         1       0       0       0       0
  1467 ;;      Temps:          1       0       0       0       0
  1468 ;;      Totals:         6       0       0       0       0
  1469 ;;Total ram usage:        6 bytes
  1470 ;; Hardware stack levels used: 1
  1471 ;; This function calls:
  1472 ;;		Nothing
  1473 ;; This function is called by:
  1474 ;;		_isr
  1475 ;; This function uses a non-reentrant model
  1476 ;;
  1477                           
  1478     0214                     ___lwmod:	
  1479                           ;psect for function ___lwmod
  1480                           
  1481     0214                     i1l929:	
  1482                           ;incstack = 0
  1483                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1484                           
  1485     0214  0878               	movf	___lwmod@divisor,w
  1486     0215  0479               	iorwf	___lwmod@divisor+1,w
  1487     0216  1903               	btfsc	3,2
  1488     0217  2A19               	goto	u33_21
  1489     0218  2A1A               	goto	u33_20
  1490     0219                     u33_21:
  1491     0219  2A49               	goto	i1l947
  1492     021A                     u33_20:
  1493     021A                     i1l931:
  1494     021A  01FD               	clrf	___lwmod@counter
  1495     021B  0AFD               	incf	___lwmod@counter,f
  1496     021C  2A28               	goto	i1l937
  1497     021D                     i1l933:
  1498     021D  3001               	movlw	1
  1499     021E                     u34_25:
  1500     021E  1003               	clrc
  1501     021F  0DF8               	rlf	___lwmod@divisor,f
  1502     0220  0DF9               	rlf	___lwmod@divisor+1,f
  1503     0221  3EFF               	addlw	-1
  1504     0222  1D03               	skipz
  1505     0223  2A1E               	goto	u34_25
  1506     0224                     i1l935:
  1507     0224  3001               	movlw	1
  1508     0225  00FC               	movwf	??___lwmod
  1509     0226  087C               	movf	??___lwmod,w
  1510     0227  07FD               	addwf	___lwmod@counter,f
  1511     0228                     i1l937:
  1512     0228  1FF9               	btfss	___lwmod@divisor+1,7
  1513     0229  2A2B               	goto	u35_21
  1514     022A  2A2C               	goto	u35_20
  1515     022B                     u35_21:
  1516     022B  2A1D               	goto	i1l933
  1517     022C                     u35_20:
  1518     022C                     i1l939:
  1519     022C  0879               	movf	___lwmod@divisor+1,w
  1520     022D  027B               	subwf	___lwmod@dividend+1,w
  1521     022E  1D03               	skipz
  1522     022F  2A32               	goto	u36_25
  1523     0230  0878               	movf	___lwmod@divisor,w
  1524     0231  027A               	subwf	___lwmod@dividend,w
  1525     0232                     u36_25:
  1526     0232  1C03               	skipc
  1527     0233  2A35               	goto	u36_21
  1528     0234  2A36               	goto	u36_20
  1529     0235                     u36_21:
  1530     0235  2A3C               	goto	i1l943
  1531     0236                     u36_20:
  1532     0236                     i1l941:
  1533     0236  0878               	movf	___lwmod@divisor,w
  1534     0237  02FA               	subwf	___lwmod@dividend,f
  1535     0238  0879               	movf	___lwmod@divisor+1,w
  1536     0239  1C03               	skipc
  1537     023A  03FB               	decf	___lwmod@dividend+1,f
  1538     023B  02FB               	subwf	___lwmod@dividend+1,f
  1539     023C                     i1l943:
  1540     023C  3001               	movlw	1
  1541     023D                     u37_25:
  1542     023D  1003               	clrc
  1543     023E  0CF9               	rrf	___lwmod@divisor+1,f
  1544     023F  0CF8               	rrf	___lwmod@divisor,f
  1545     0240  3EFF               	addlw	-1
  1546     0241  1D03               	skipz
  1547     0242  2A3D               	goto	u37_25
  1548     0243                     i1l945:
  1549     0243  3001               	movlw	1
  1550     0244  02FD               	subwf	___lwmod@counter,f
  1551     0245  1D03               	btfss	3,2
  1552     0246  2A48               	goto	u38_21
  1553     0247  2A49               	goto	u38_20
  1554     0248                     u38_21:
  1555     0248  2A2C               	goto	i1l939
  1556     0249                     u38_20:
  1557     0249                     i1l947:
  1558     0249  087B               	movf	___lwmod@dividend+1,w
  1559     024A  00F9               	movwf	?___lwmod+1
  1560     024B  087A               	movf	___lwmod@dividend,w
  1561     024C  00F8               	movwf	?___lwmod
  1562     024D                     i1l475:
  1563     024D  0008               	return
  1564     024E                     __end_of___lwmod:
  1565                           
  1566                           	psect	text7
  1567     01D0                     __ptext7:	
  1568 ;; *************** function ___lwdiv *****************
  1569 ;; Defined at:
  1570 ;;		line 5 in file "E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  1571 ;; Parameters:    Size  Location     Type
  1572 ;;  divisor         2    0[COMMON] unsigned int 
  1573 ;;  dividend        2    2[COMMON] unsigned int 
  1574 ;; Auto vars:     Size  Location     Type
  1575 ;;  quotient        2    5[COMMON] unsigned int 
  1576 ;;  counter         1    7[COMMON] unsigned char 
  1577 ;; Return value:  Size  Location     Type
  1578 ;;                  2    0[COMMON] unsigned int 
  1579 ;; Registers used:
  1580 ;;		wreg, status,2, status,0
  1581 ;; Tracked objects:
  1582 ;;		On entry : 0/0
  1583 ;;		On exit  : 0/0
  1584 ;;		Unchanged: 0/0
  1585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1586 ;;      Params:         4       0       0       0       0
  1587 ;;      Locals:         3       0       0       0       0
  1588 ;;      Temps:          1       0       0       0       0
  1589 ;;      Totals:         8       0       0       0       0
  1590 ;;Total ram usage:        8 bytes
  1591 ;; Hardware stack levels used: 1
  1592 ;; This function calls:
  1593 ;;		Nothing
  1594 ;; This function is called by:
  1595 ;;		_isr
  1596 ;; This function uses a non-reentrant model
  1597 ;;
  1598                           
  1599     01D0                     ___lwdiv:	
  1600                           ;psect for function ___lwdiv
  1601                           
  1602     01D0                     i1l903:	
  1603                           ;incstack = 0
  1604                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1605                           
  1606     01D0  01F5               	clrf	___lwdiv@quotient
  1607     01D1  01F6               	clrf	___lwdiv@quotient+1
  1608     01D2                     i1l905:
  1609     01D2  0870               	movf	___lwdiv@divisor,w
  1610     01D3  0471               	iorwf	___lwdiv@divisor+1,w
  1611     01D4  1903               	btfsc	3,2
  1612     01D5  29D7               	goto	u26_21
  1613     01D6  29D8               	goto	u26_20
  1614     01D7                     u26_21:
  1615     01D7  2A0F               	goto	i1l925
  1616     01D8                     u26_20:
  1617     01D8                     i1l907:
  1618     01D8  01F7               	clrf	___lwdiv@counter
  1619     01D9  0AF7               	incf	___lwdiv@counter,f
  1620     01DA  29E6               	goto	i1l913
  1621     01DB                     i1l909:
  1622     01DB  3001               	movlw	1
  1623     01DC                     u27_25:
  1624     01DC  1003               	clrc
  1625     01DD  0DF0               	rlf	___lwdiv@divisor,f
  1626     01DE  0DF1               	rlf	___lwdiv@divisor+1,f
  1627     01DF  3EFF               	addlw	-1
  1628     01E0  1D03               	skipz
  1629     01E1  29DC               	goto	u27_25
  1630     01E2                     i1l911:
  1631     01E2  3001               	movlw	1
  1632     01E3  00F4               	movwf	??___lwdiv
  1633     01E4  0874               	movf	??___lwdiv,w
  1634     01E5  07F7               	addwf	___lwdiv@counter,f
  1635     01E6                     i1l913:
  1636     01E6  1FF1               	btfss	___lwdiv@divisor+1,7
  1637     01E7  29E9               	goto	u28_21
  1638     01E8  29EA               	goto	u28_20
  1639     01E9                     u28_21:
  1640     01E9  29DB               	goto	i1l909
  1641     01EA                     u28_20:
  1642     01EA                     i1l915:
  1643     01EA  3001               	movlw	1
  1644     01EB                     u29_25:
  1645     01EB  1003               	clrc
  1646     01EC  0DF5               	rlf	___lwdiv@quotient,f
  1647     01ED  0DF6               	rlf	___lwdiv@quotient+1,f
  1648     01EE  3EFF               	addlw	-1
  1649     01EF  1D03               	skipz
  1650     01F0  29EB               	goto	u29_25
  1651     01F1  0871               	movf	___lwdiv@divisor+1,w
  1652     01F2  0273               	subwf	___lwdiv@dividend+1,w
  1653     01F3  1D03               	skipz
  1654     01F4  29F7               	goto	u30_25
  1655     01F5  0870               	movf	___lwdiv@divisor,w
  1656     01F6  0272               	subwf	___lwdiv@dividend,w
  1657     01F7                     u30_25:
  1658     01F7  1C03               	skipc
  1659     01F8  29FA               	goto	u30_21
  1660     01F9  29FB               	goto	u30_20
  1661     01FA                     u30_21:
  1662     01FA  2A02               	goto	i1l921
  1663     01FB                     u30_20:
  1664     01FB                     i1l917:
  1665     01FB  0870               	movf	___lwdiv@divisor,w
  1666     01FC  02F2               	subwf	___lwdiv@dividend,f
  1667     01FD  0871               	movf	___lwdiv@divisor+1,w
  1668     01FE  1C03               	skipc
  1669     01FF  03F3               	decf	___lwdiv@dividend+1,f
  1670     0200  02F3               	subwf	___lwdiv@dividend+1,f
  1671     0201                     i1l919:
  1672     0201  1475               	bsf	___lwdiv@quotient,0
  1673     0202                     i1l921:
  1674     0202  3001               	movlw	1
  1675     0203                     u31_25:
  1676     0203  1003               	clrc
  1677     0204  0CF1               	rrf	___lwdiv@divisor+1,f
  1678     0205  0CF0               	rrf	___lwdiv@divisor,f
  1679     0206  3EFF               	addlw	-1
  1680     0207  1D03               	skipz
  1681     0208  2A03               	goto	u31_25
  1682     0209                     i1l923:
  1683     0209  3001               	movlw	1
  1684     020A  02F7               	subwf	___lwdiv@counter,f
  1685     020B  1D03               	btfss	3,2
  1686     020C  2A0E               	goto	u32_21
  1687     020D  2A0F               	goto	u32_20
  1688     020E                     u32_21:
  1689     020E  29EA               	goto	i1l915
  1690     020F                     u32_20:
  1691     020F                     i1l925:
  1692     020F  0876               	movf	___lwdiv@quotient+1,w
  1693     0210  00F1               	movwf	?___lwdiv+1
  1694     0211  0875               	movf	___lwdiv@quotient,w
  1695     0212  00F0               	movwf	?___lwdiv
  1696     0213                     i1l465:
  1697     0213  0008               	return
  1698     0214                     __end_of___lwdiv:
  1699     007E                     btemp	set	126	;btemp
  1700     007E                     wtemp0	set	126
  1701                           
  1702                           	psect	idloc
  1703                           
  1704                           ;Config register IDLOC0 @ 0x2000
  1705                           ;	unspecified, using default values
  1706     2000                     	org	8192
  1707     2000  3FFF               	dw	16383
  1708                           
  1709                           ;Config register IDLOC1 @ 0x2001
  1710                           ;	unspecified, using default values
  1711     2001                     	org	8193
  1712     2001  3FFF               	dw	16383
  1713                           
  1714                           ;Config register IDLOC2 @ 0x2002
  1715                           ;	unspecified, using default values
  1716     2002                     	org	8194
  1717     2002  3FFF               	dw	16383
  1718                           
  1719                           ;Config register IDLOC3 @ 0x2003
  1720                           ;	unspecified, using default values
  1721     2003                     	org	8195
  1722     2003  3FFF               	dw	16383
  1723                           
  1724                           	psect	config
  1725                           
  1726                           ;Config register CONFIG1 @ 0x2007
  1727                           ;	Oscillator Selection bits
  1728                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1729                           ;	Watchdog Timer Enable bit
  1730                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1731                           ;	Power-up Timer Enable bit
  1732                           ;	PWRTE = OFF, PWRT disabled
  1733                           ;	RE3/MCLR pin function select bit
  1734                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1735                           ;	Code Protection bit
  1736                           ;	CP = OFF, Program memory code protection is disabled
  1737                           ;	Data Code Protection bit
  1738                           ;	CPD = OFF, Data memory code protection is disabled
  1739                           ;	Brown Out Reset Selection bits
  1740                           ;	BOREN = OFF, BOR disabled
  1741                           ;	Internal External Switchover bit
  1742                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1743                           ;	Fail-Safe Clock Monitor Enabled bit
  1744                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1745                           ;	Low Voltage Programming Enable bit
  1746                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1747                           ;	In-Circuit Debugger Mode bit
  1748                           ;	DEBUG = 0x1, unprogramme  1749     2007                     	org	8199
  1750     2007  20D4               	dw	8404
  1751                           
  1752                           ;Config register CONFIG2 @ 0x2008
  1753                           ;	Brown-out Reset Selection bit
  1754                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1755                           ;	Flash Program Memory Self Write Enable bits
  1756                           ;	WRT = OFF, Write protection off
  1757     2008                     	org	8200
  1758     2008  3FFF               	dw	16383

Data Sizes:
    Strings     113
    Constant    0
    Data        20
    BSS         13
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      8      41
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    cadena@cursor	PTR unsigned char  size(1) Largest target is 76
		 -> STR_3(CODE[2]), STR_2(CODE[37]), STR_1(CODE[76]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->___lwmod
    ___lwmod->___lwdiv

Critical Paths under _main in BANK0

    _main->_cadena

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     144
                                              6 BANK0      2     2      0
                             _cadena
                              _setup
                           _setupADC
                          _setupUART
 ---------------------------------------------------------------------------------
 (1) _setupUART                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setupADC                                             1     1      0       0
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _cadena                                               2     2      0     144
                                              4 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  4     4      0     929
                                              0 BANK0      4     4      0
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     463
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     466
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _cadena
   _setup
   _setupADC
   _setupUART

 _isr (ROOT)
   ___lwdiv
   ___lwmod
     ___lwdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      8      29       5       51.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      37      12        0.0%
ABS                  0      0      37       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sun Oct 30 11:00:12 2022

                      pc 0002                       l73 004A                       l90 0286  
                     l93 02D4                       l78 00BE                       l87 029D  
                     l98 0252                       fsr 0004                      l102 026E  
                    l901 0262                      l861 028B                      l871 0297  
                    l863 028C                      l873 0298                      l865 028F  
                    l881 027F                      l875 0299                      l867 0292  
                    l859 0287                      l891 02D0                      l883 02C5  
                    l971 0050                      l963 0030                      l877 029A  
                    l869 0296                      l893 02D3                      l885 02C9  
                    l981 007A                      l973 005C                      l965 003F  
                    l895 0251                      l879 026F                      l887 02CA  
                    l983 008F                      l975 0064                      l991 00A6  
                    l967 0045                      l897 0256                      l889 02CD  
                    l993 00AC                      l985 0099                      l977 0065  
                    l969 004E                      l899 025E                      l995 00B8  
                    l987 00A4                      l979 006F                      l997 00BC  
                    l989 00A5                      l999 00C2                      u240 0256  
                    u400 004E                      u241 0255                      u401 004D  
                    u250 026E                      u410 0064                      u251 026D  
                    u411 0063                      u420 00AC                      u421 00AB  
                    u430 00C2                      u431 00C1                      u440 00C7  
                    u441 00C6                      u450 00D2                      u451 00D1  
                    u507 0095                      u460 00D7                      u517 0283  
                    u461 00D6                      u477 0057                      u487 006B  
                    u497 0080                      _isr 0177                      _pot 0034  
                    fsr0 0004                      indf 0000                     l1001 00C7  
                   l1003 00C9                     l1011 00CD                     l1005 00CA  
                   l1013 00D2                     l1007 00CB                     l1009 00CC  
                   ?_isr 0070                     STR_1 0106                     STR_2 0152  
                   STR_3 0175                     i1l66 01C9                     _flag 003E  
                   _main 0030                     btemp 007E                     start 000E  
                  ??_isr 0041                    ?_main 0070                    _ANSEL 0188  
        __end_of___lwdiv 0214          __end_of___lwmod 024E                    i1l465 0213  
                  i1l475 024D                    i1l911 01E2                    i1l903 01D0  
                  i1l921 0202                    i1l913 01E6                    i1l905 01D2  
                  i1l923 0209                    i1l915 01EA                    i1l907 01D8  
                  i1l931 021A                    i1l917 01FB                    i1l909 01DB  
                  i1l925 020F                    i1l941 0236                    i1l933 021D  
                  i1l919 0201                    i1l943 023C                    i1l935 0224  
                  i1l951 0177                    i1l945 0243                    i1l937 0228  
                  i1l929 0214                    i1l961 01C8                    i1l953 017B  
                  i1l939 022C                    i1l947 0249                    i1l955 0182  
                  i1l957 0195                    i1l959 01B5                    _RCREG 001A  
                  u30_20 01FB                    u30_21 01FA                    u30_25 01F7  
                  u31_25 0203                    u32_20 020F                    u32_21 020E  
                  u33_20 021A                    u33_21 0219                    u26_20 01D8  
                  u26_21 01D7                    _SPBRG 0099                    u34_25 021E  
                  u35_20 022C                    u35_21 022B                    _PORTB 0006  
                  u27_25 01DC                    u28_20 01EA                    u36_20 0236  
                  u28_21 01E9                    u36_21 0235                    u36_25 0232  
                  u29_25 01EB                    u37_25 023D                    u38_20 0249  
                  u38_21 0248                    u39_20 017B                    u39_21 017A  
                  _TRISB 0086                    _TXREG 0019                    _ascii 0020  
                  _setup 0287                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 0011             __end_of_main 00DB  
                 ??_main 0047                   _ADRESH 001E                   ?_setup 0070  
                 _ANSELH 0189                   _cadena 024E                   _decena 0038  
              ??___lwdiv 0074                ??___lwmod 007C                   _unidad 0036  
       __end_of_setupADC 0287                   saved_w 007E  __end_of__initialization 002C  
         __pcstackCOMMON 0070             __pidataBANK0 029E            __end_of_setup 029E  
                ??_setup 0045               __pbssBANK0 0034               __pmaintext 0030  
                ?_cadena 0070               __pintentry 0004               __stringtab 0100  
           cadena@cursor 0046                ?_setupADC 0070                  ___lwdiv 01D0  
                ___lwmod 0214                  _bandera 0040                  _centena 003A  
                __ptext1 02C5                  __ptext2 026F                  __ptext3 0287  
                __ptext4 024E                  __ptext5 0177                  __ptext6 0214  
                __ptext7 01D0                  _palabra 003C     end_of_initialization 002C  
      __end_of_setupUART 02D5               ??_setupADC 0045                _RCSTAbits 0018  
              _TXSTAbits 0098           __end_of_cadena 026F      start_initialization 0011  
            __end_of_isr 01D0                 ??_cadena 0045               init_fetch0 02B2  
            __pdataBANK0 0020                ___latbits 0002            __pcstackBANK0 0041  
       ___lwdiv@dividend 0072                 ?___lwdiv 0070                 ?___lwmod 0078  
              __pstrings 0100         ___lwdiv@quotient 0075        interrupt_function 0004  
               _PIE1bits 008C                 _PIR1bits 000C                _setupUART 02C5  
             _ADCON0bits 001F              __stringbase 0105               _ADCON1bits 009F  
             ?_setupUART 0070       __end_of__stringtab 0106          ___lwdiv@divisor 0070  
        ___lwdiv@counter 0077                 _selector 003F                 _setupADC 026F  
             _INTCONbits 000B                 init_ram0 02B6                 intlevel1 0000  
       ___lwmod@dividend 007A                stringcode 0100               _OSCCONbits 008F  
            ??_setupUART 0045          ___lwmod@divisor 0078          ___lwmod@counter 007D  
               stringdir 0100                 stringtab 0100  
