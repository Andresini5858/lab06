

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sun Oct 30 11:36:11 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	intentry,global,class=CODE,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    23                           	dabs	1,0x7E,2
    24     0000                     
    25                           ; Version 2.40
    26                           ; Generated 17/11/2021 GMT
    27                           ; 
    28                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution. Publication is not required when
    42                           ;        this file is used in an embedded application.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC16F887 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60     0000                     	;# 
    61     0001                     	;# 
    62     0002                     	;# 
    63     0003                     	;# 
    64     0004                     	;# 
    65     0005                     	;# 
    66     0006                     	;# 
    67     0007                     	;# 
    68     0008                     	;# 
    69     0009                     	;# 
    70     000A                     	;# 
    71     000B                     	;# 
    72     000C                     	;# 
    73     000D                     	;# 
    74     000E                     	;# 
    75     000E                     	;# 
    76     000F                     	;# 
    77     0010                     	;# 
    78     0011                     	;# 
    79     0012                     	;# 
    80     0013                     	;# 
    81     0014                     	;# 
    82     0015                     	;# 
    83     0015                     	;# 
    84     0016                     	;# 
    85     0017                     	;# 
    86     0018                     	;# 
    87     0019                     	;# 
    88     001A                     	;# 
    89     001B                     	;# 
    90     001B                     	;# 
    91     001C                     	;# 
    92     001D                     	;# 
    93     001E                     	;# 
    94     001F                     	;# 
    95     0081                     	;# 
    96     0085                     	;# 
    97     0086                     	;# 
    98     0087                     	;# 
    99     0088                     	;# 
   100     0089                     	;# 
   101     008C                     	;# 
   102     008D                     	;# 
   103     008E                     	;# 
   104     008F                     	;# 
   105     0090                     	;# 
   106     0091                     	;# 
   107     0092                     	;# 
   108     0093                     	;# 
   109     0093                     	;# 
   110     0093                     	;# 
   111     0094                     	;# 
   112     0095                     	;# 
   113     0096                     	;# 
   114     0097                     	;# 
   115     0098                     	;# 
   116     0099                     	;# 
   117     009A                     	;# 
   118     009B                     	;# 
   119     009C                     	;# 
   120     009D                     	;# 
   121     009E                     	;# 
   122     009F                     	;# 
   123     0105                     	;# 
   124     0107                     	;# 
   125     0108                     	;# 
   126     0109                     	;# 
   127     010C                     	;# 
   128     010C                     	;# 
   129     010D                     	;# 
   130     010E                     	;# 
   131     010F                     	;# 
   132     0185                     	;# 
   133     0187                     	;# 
   134     0188                     	;# 
   135     0189                     	;# 
   136     018C                     	;# 
   137     018D                     	;# 
   138     0000                     	;# 
   139     0001                     	;# 
   140     0002                     	;# 
   141     0003                     	;# 
   142     0004                     	;# 
   143     0005                     	;# 
   144     0006                     	;# 
   145     0007                     	;# 
   146     0008                     	;# 
   147     0009                     	;# 
   148     000A                     	;# 
   149     000B                     	;# 
   150     000C                     	;# 
   151     000D                     	;# 
   152     000E                     	;# 
   153     000E                     	;# 
   154     000F                     	;# 
   155     0010                     	;# 
   156     0011                     	;# 
   157     0012                     	;# 
   158     0013                     	;# 
   159     0014                     	;# 
   160     0015                     	;# 
   161     0015                     	;# 
   162     0016                     	;# 
   163     0017                     	;# 
   164     0018                     	;# 
   165     0019                     	;# 
   166     001A                     	;# 
   167     001B                     	;# 
   168     001B                     	;# 
   169     001C                     	;# 
   170     001D                     	;# 
   171     001E                     	;# 
   172     001F                     	;# 
   173     0081                     	;# 
   174     0085                     	;# 
   175     0086                     	;# 
   176     0087                     	;# 
   177     0088                     	;# 
   178     0089                     	;# 
   179     008C                     	;# 
   180     008D                     	;# 
   181     008E                     	;# 
   182     008F                     	;# 
   183     0090                     	;# 
   184     0091                     	;# 
   185     0092                     	;# 
   186     0093                     	;# 
   187     0093                     	;# 
   188     0093                     	;# 
   189     0094                     	;# 
   190     0095                     	;# 
   191     0096                     	;# 
   192     0097                     	;# 
   193     0098                     	;# 
   194     0099                     	;# 
   195     009A                     	;# 
   196     009B                     	;# 
   197     009C                     	;# 
   198     009D                     	;# 
   199     009E                     	;# 
   200     009F                     	;# 
   201     0105                     	;# 
   202     0107                     	;# 
   203     0108                     	;# 
   204     0109                     	;# 
   205     010C                     	;# 
   206     010C                     	;# 
   207     010D                     	;# 
   208     010E                     	;# 
   209     010F                     	;# 
   210     0185                     	;# 
   211     0187                     	;# 
   212     0188                     	;# 
   213     0189                     	;# 
   214     018C                     	;# 
   215     018D                     	;# 
   216     0000                     	;# 
   217     0001                     	;# 
   218     0002                     	;# 
   219     0003                     	;# 
   220     0004                     	;# 
   221     0005                     	;# 
   222     0006                     	;# 
   223     0007                     	;# 
   224     0008                     	;# 
   225     0009                     	;# 
   226     000A                     	;# 
   227     000B                     	;# 
   228     000C                     	;# 
   229     000D                     	;# 
   230     000E                     	;# 
   231     000E                     	;# 
   232     000F                     	;# 
   233     0010                     	;# 
   234     0011                     	;# 
   235     0012                     	;# 
   236     0013                     	;# 
   237     0014                     	;# 
   238     0015                     	;# 
   239     0015                     	;# 
   240     0016                     	;# 
   241     0017                     	;# 
   242     0018                     	;# 
   243     0019                     	;# 
   244     001A                     	;# 
   245     001B                     	;# 
   246     001B                     	;# 
   247     001C                     	;# 
   248     001D                     	;# 
   249     001E                     	;# 
   250     001F                     	;# 
   251     0081                     	;# 
   252     0085                     	;# 
   253     0086                     	;# 
   254     0087                     	;# 
   255     0088                     	;# 
   256     0089                     	;# 
   257     008C                     	;# 
   258     008D                     	;# 
   259     008E                     	;# 
   260     008F                     	;# 
   261     0090                     	;# 
   262     0091                     	;# 
   263     0092                     	;# 
   264     0093                     	;# 
   265     0093                     	;# 
   266     0093                     	;# 
   267     0094                     	;# 
   268     0095                     	;# 
   269     0096                     	;# 
   270     0097                     	;# 
   271     0098                     	;# 
   272     0099                     	;# 
   273     009A                     	;# 
   274     009B                     	;# 
   275     009C                     	;# 
   276     009D                     	;# 
   277     009E                     	;# 
   278     009F                     	;# 
   279     0105                     	;# 
   280     0107                     	;# 
   281     0108                     	;# 
   282     0109                     	;# 
   283     010C                     	;# 
   284     010C                     	;# 
   285     010D                     	;# 
   286     010E                     	;# 
   287     010F                     	;# 
   288     0185                     	;# 
   289     0187                     	;# 
   290     0188                     	;# 
   291     0189                     	;# 
   292     018C                     	;# 
   293     018D                     	;# 
   294                           
   295                           	psect	idataBANK0
   296     02A3                     __pidataBANK0:
   297                           
   298                           ;initializer for _ascii
   299     02A3  3400               	retlw	0
   300     02A4  3400               	retlw	0
   301     02A5  3401               	retlw	1
   302     02A6  3400               	retlw	0
   303     02A7  3402               	retlw	2
   304     02A8  3400               	retlw	0
   305     02A9  3403               	retlw	3
   306     02AA  3400               	retlw	0
   307     02AB  3404               	retlw	4
   308     02AC  3400               	retlw	0
   309     02AD  3405               	retlw	5
   310     02AE  3400               	retlw	0
   311     02AF  3407               	retlw	7
   312     02B0  3400               	retlw	0
   313     02B1  3408               	retlw	8
   314     02B2  3400               	retlw	0
   315     02B3  3409               	retlw	9
   316     02B4  3400               	retlw	0
   317     02B5  3400               	retlw	0
   318     02B6  3400               	retlw	0
   319     0018                     _RCSTAbits	set	24
   320     000B                     _INTCONbits	set	11
   321     0006                     _PORTB	set	6
   322     0019                     _TXREG	set	25
   323     001F                     _ADCON0bits	set	31
   324     001A                     _RCREG	set	26
   325     001E                     _ADRESH	set	30
   326     000C                     _PIR1bits	set	12
   327     0098                     _TXSTAbits	set	152
   328     0099                     _SPBRG	set	153
   329     009F                     _ADCON1bits	set	159
   330     008C                     _PIE1bits	set	140
   331     008F                     _OSCCONbits	set	143
   332     0086                     _TRISB	set	134
   333     0189                     _ANSELH	set	393
   334     0188                     _ANSEL	set	392
   335                           
   336                           	psect	strings
   337     0100                     __pstrings:
   338     0100                     stringtab:
   339     0100                     __stringtab:
   340     0100                     stringcode:	
   341                           ;	String table - string pointers are 1 byte each
   342                           
   343     0100                     stringdir:
   344     0100  3001               	movlw	high stringdir
   345     0101  008A               	movwf	10
   346     0102  0804               	movf	4,w
   347     0103  0A84               	incf	4,f
   348     0104  0782               	addwf	2,f
   349     0105                     __stringbase:
   350     0105  3400               	retlw	0
   351     0106                     __end_of__stringtab:
   352     0106                     STR_1:
   353     0106  340A               	retlw	10
   354     0107  340D               	retlw	13
   355     0108  342D               	retlw	45	;'-'
   356     0109  342D               	retlw	45	;'-'
   357     010A  342D               	retlw	45	;'-'
   358     010B  342D               	retlw	45	;'-'
   359     010C  342D               	retlw	45	;'-'
   360     010D  342D               	retlw	45	;'-'
   361     010E  342D               	retlw	45	;'-'
   362     010F  342D               	retlw	45	;'-'
   363     0110  342D               	retlw	45	;'-'
   364     0111  342D               	retlw	45	;'-'
   365     0112  342D               	retlw	45	;'-'
   366     0113  342D               	retlw	45	;'-'
   367     0114  342D               	retlw	45	;'-'
   368     0115  344D               	retlw	77	;'M'
   369     0116  3445               	retlw	69	;'E'
   370     0117  344E               	retlw	78	;'N'
   371     0118  3455               	retlw	85	;'U'
   372     0119  342D               	retlw	45	;'-'
   373     011A  342D               	retlw	45	;'-'
   374     011B  342D               	retlw	45	;'-'
   375     011C  342D               	retlw	45	;'-'
   376     011D  342D               	retlw	45	;'-'
   377     011E  342D               	retlw	45	;'-'
   378     011F  342D               	retlw	45	;'-'
   379     0120  342D               	retlw	45	;'-'
   380     0121  342D               	retlw	45	;'-'
   381     0122  342D               	retlw	45	;'-'
   382     0123  342D               	retlw	45	;'-'
   383     0124  342D               	retlw	45	;'-'
   384     0125  342D               	retlw	45	;'-'
   385     0126  342D               	retlw	45	;'-'
   386     0127  342D               	retlw	45	;'-'
   387     0128  342D               	retlw	45	;'-'
   388     0129  342D               	retlw	45	;'-'
   389     012A  342D               	retlw	45	;'-'
   390     012B  340A               	retlw	10
   391     012C  340D               	retlw	13
   392     012D  3431               	retlw	49	;'1'
   393     012E  3429               	retlw	41	;')'
   394     012F  3420               	retlw	32	;' '
   395     0130  344C               	retlw	76	;'L'
   396     0131  3465               	retlw	101	;'e'
   397     0132  3465               	retlw	101	;'e'
   398     0133  3472               	retlw	114	;'r'
   399     0134  3420               	retlw	32	;' '
   400     0135  3450               	retlw	80	;'P'
   401     0136  346F               	retlw	111	;'o'
   402     0137  3474               	retlw	116	;'t'
   403     0138  3465               	retlw	101	;'e'
   404     0139  346E               	retlw	110	;'n'
   405     013A  3463               	retlw	99	;'c'
   406     013B  3469               	retlw	105	;'i'
   407     013C  346F               	retlw	111	;'o'
   408     013D  346D               	retlw	109	;'m'
   409     013E  3465               	retlw	101	;'e'
   410     013F  3474               	retlw	116	;'t'
   411     0140  3472               	retlw	114	;'r'
   412     0141  346F               	retlw	111	;'o'
   413     0142  340A               	retlw	10
   414     0143  340D               	retlw	13
   415     0144  3432               	retlw	50	;'2'
   416     0145  3429               	retlw	41	;')'
   417     0146  3420               	retlw	32	;' '
   418     0147  3445               	retlw	69	;'E'
   419     0148  346E               	retlw	110	;'n'
   420     0149  3476               	retlw	118	;'v'
   421     014A  3469               	retlw	105	;'i'
   422     014B  3461               	retlw	97	;'a'
   423     014C  3472               	retlw	114	;'r'
   424     014D  3420               	retlw	32	;' '
   425     014E  3441               	retlw	65	;'A'
   426     014F  3453               	retlw	83	;'S'
   427     0150  3443               	retlw	67	;'C'
   428     0151  3449               	retlw	73	;'I'
   429     0152  3449               	retlw	73	;'I'
   430     0153  340A               	retlw	10
   431     0154  340D               	retlw	13
   432     0155  3400               	retlw	0
   433     0156                     STR_2:
   434     0156  3449               	retlw	73	;'I'
   435     0157  346E               	retlw	110	;'n'
   436     0158  3467               	retlw	103	;'g'
   437     0159  3472               	retlw	114	;'r'
   438     015A  3465               	retlw	101	;'e'
   439     015B  3473               	retlw	115	;'s'
   440     015C  3465               	retlw	101	;'e'
   441     015D  3420               	retlw	32	;' '
   442     015E  3463               	retlw	99	;'c'
   443     015F  3461               	retlw	97	;'a'
   444     0160  3472               	retlw	114	;'r'
   445     0161  3461               	retlw	97	;'a'
   446     0162  3463               	retlw	99	;'c'
   447     0163  3474               	retlw	116	;'t'
   448     0164  3465               	retlw	101	;'e'
   449     0165  3472               	retlw	114	;'r'
   450     0166  3420               	retlw	32	;' '
   451     0167  3428               	retlw	40	;'('
   452     0168  3473               	retlw	115	;'s'
   453     0169  346F               	retlw	111	;'o'
   454     016A  346C               	retlw	108	;'l'
   455     016B  346F               	retlw	111	;'o'
   456     016C  3420               	retlw	32	;' '
   457     016D  3475               	retlw	117	;'u'
   458     016E  346E               	retlw	110	;'n'
   459     016F  3420               	retlw	32	;' '
   460     0170  3463               	retlw	99	;'c'
   461     0171  3461               	retlw	97	;'a'
   462     0172  3472               	retlw	114	;'r'
   463     0173  3461               	retlw	97	;'a'
   464     0174  3463               	retlw	99	;'c'
   465     0175  3474               	retlw	116	;'t'
   466     0176  3465               	retlw	101	;'e'
   467     0177  3472               	retlw	114	;'r'
   468     0178  3429               	retlw	41	;')'
   469     0179  340A               	retlw	10
   470     017A  340D               	retlw	13
   471     017B  3400               	retlw	0
   472     0179                     
   473                           	psect	cinit
   474     0011                     start_initialization:	
   475                           ; #config settings
   476                           
   477     0011                     __initialization:
   478                           
   479                           ; Initialize objects allocated to BANK0
   480     0011  1383               	bcf	3,7	;select IRP bank0
   481     0012  3034               	movlw	low (__pdataBANK0+20)
   482     0013  00FD               	movwf	btemp+-1
   483     0014  3002               	movlw	high __pidataBANK0
   484     0015  00FE               	movwf	btemp
   485     0016  30A3               	movlw	low __pidataBANK0
   486     0017  00FF               	movwf	btemp+1
   487     0018  3020               	movlw	low __pdataBANK0
   488     0019  0084               	movwf	4
   489     001A  120A  118A  22BB  120A  118A  	fcall	init_ram0
   490                           
   491                           ; Clear objects allocated to BANK0
   492     001F  01B4               	clrf	__pbssBANK0& (0+127)
   493     0020  01B5               	clrf	(__pbssBANK0+1)& (0+127)
   494     0021  01B6               	clrf	(__pbssBANK0+2)& (0+127)
   495     0022  01B7               	clrf	(__pbssBANK0+3)& (0+127)
   496     0023  01B8               	clrf	(__pbssBANK0+4)& (0+127)
   497     0024  01B9               	clrf	(__pbssBANK0+5)& (0+127)
   498     0025  01BA               	clrf	(__pbssBANK0+6)& (0+127)
   499     0026  01BB               	clrf	(__pbssBANK0+7)& (0+127)
   500     0027  01BC               	clrf	(__pbssBANK0+8)& (0+127)
   501     0028  01BD               	clrf	(__pbssBANK0+9)& (0+127)
   502     0029  01BE               	clrf	(__pbssBANK0+10)& (0+127)
   503     002A  01BF               	clrf	(__pbssBANK0+11)& (0+127)
   504     002B  01C0               	clrf	(__pbssBANK0+12)& (0+127)
   505     002C                     end_of_initialization:	
   506                           ;End of C runtime variable initialization code
   507                           
   508     002C                     __end_of__initialization:
   509     002C  0183               	clrf	3
   510     002D  120A  118A  2830   	ljmp	_main	;jump to C main() function
   511                           
   512                           	psect	bssBANK0
   513     0034                     __pbssBANK0:
   514     0034                     _pot:
   515     0034                     	ds	2
   516     0036                     _unidad:
   517     0036                     	ds	2
   518     0038                     _decena:
   519     0038                     	ds	2
   520     003A                     _centena:
   521     003A                     	ds	2
   522     003C                     _palabra:
   523     003C                     	ds	2
   524     003E                     _flag:
   525     003E                     	ds	1
   526     003F                     _selector:
   527     003F                     	ds	1
   528     0040                     _bandera:
   529     0040                     	ds	1
   530                           
   531                           	psect	dataBANK0
   532     0020                     __pdataBANK0:
   533     0020                     _ascii:
   534     0020                     	ds	20
   535                           
   536                           	psect	inittext
   537     02B7                     init_fetch0:	
   538                           ;	Called with low address in FSR and high address in W
   539                           
   540     02B7  087E               	movf	btemp,w
   541     02B8  008A               	movwf	10
   542     02B9  087F               	movf	btemp+1,w
   543     02BA  0082               	movwf	2
   544     02BB                     init_ram0:	
   545                           ;Called with:
   546                           ;	high address of idata address in btemp 
   547                           ;	low address of idata address in btemp+1 
   548                           ;	low address of data in FSR
   549                           ;	high address + 1 of data in btemp-1
   550                           
   551     02BB  120A  118A  22B7  120A  118A  	fcall	init_fetch0
   552     02C0  0080               	movwf	0
   553     02C1  0A84               	incf	4,f
   554     02C2  0804               	movf	4,w
   555     02C3  067D               	xorwf	btemp+-1,w
   556     02C4  1903               	btfsc	3,2
   557     02C5  3400               	retlw	0
   558     02C6  0AFF               	incf	btemp+1,f
   559     02C7  1903               	btfsc	3,2
   560     02C8  0AFE               	incf	btemp,f
   561     02C9  2ABB               	goto	init_ram0
   562                           
   563                           	psect	cstackCOMMON
   564     0070                     __pcstackCOMMON:
   565     0070                     ?_setup:
   566     0070                     ?_setupADC:	
   567                           ; 1 bytes @ 0x0
   568                           
   569     0070                     ?_setupUART:	
   570                           ; 1 bytes @ 0x0
   571                           
   572     0070                     ?_cadena:	
   573                           ; 1 bytes @ 0x0
   574                           
   575     0070                     ?_isr:	
   576                           ; 1 bytes @ 0x0
   577                           
   578     0070                     ?_main:	
   579                           ; 1 bytes @ 0x0
   580                           
   581     0070                     ?___lwdiv:	
   582                           ; 1 bytes @ 0x0
   583                           
   584     0070                     ___lwdiv@divisor:	
   585                           ; 2 bytes @ 0x0
   586                           
   587                           
   588                           ; 2 bytes @ 0x0
   589     0070                     	ds	2
   590     0072                     ___lwdiv@dividend:
   591                           
   592                           ; 2 bytes @ 0x2
   593     0072                     	ds	2
   594     0074                     ??___lwdiv:
   595                           
   596                           ; 1 bytes @ 0x4
   597     0074                     	ds	1
   598     0075                     ___lwdiv@quotient:
   599                           
   600                           ; 2 bytes @ 0x5
   601     0075                     	ds	2
   602     0077                     ___lwdiv@counter:
   603                           
   604                           ; 1 bytes @ 0x7
   605     0077                     	ds	1
   606     0078                     ?___lwmod:
   607     0078                     ___lwmod@divisor:	
   608                           ; 2 bytes @ 0x8
   609                           
   610                           
   611                           ; 2 bytes @ 0x8
   612     0078                     	ds	2
   613     007A                     ___lwmod@dividend:
   614                           
   615                           ; 2 bytes @ 0xA
   616     007A                     	ds	2
   617     007C                     ??___lwmod:
   618                           
   619                           ; 1 bytes @ 0xC
   620     007C                     	ds	1
   621     007D                     ___lwmod@counter:
   622                           
   623                           ; 1 bytes @ 0xD
   624     007D                     	ds	1
   625                           
   626                           	psect	cstackBANK0
   627     0041                     __pcstackBANK0:
   628     0041                     ??_isr:
   629                           
   630                           ; 1 bytes @ 0x0
   631     0041                     	ds	4
   632     0045                     ??_setup:
   633     0045                     ??_setupADC:	
   634                           ; 1 bytes @ 0x4
   635                           
   636     0045                     ??_setupUART:	
   637                           ; 1 bytes @ 0x4
   638                           
   639     0045                     ??_cadena:	
   640                           ; 1 bytes @ 0x4
   641                           
   642                           
   643                           ; 1 bytes @ 0x4
   644     0045                     	ds	1
   645     0046                     cadena@cursor:
   646                           
   647                           ; 1 bytes @ 0x5
   648     0046                     	ds	1
   649     0047                     ??_main:
   650                           
   651                           ; 1 bytes @ 0x6
   652     0047                     	ds	2
   653                           
   654                           	psect	maintext
   655     0030                     __pmaintext:	
   656 ;;
   657 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   658 ;;
   659 ;; *************** function _main *****************
   660 ;; Defined at:
   661 ;;		line 60 in file "main.c"
   662 ;; Parameters:    Size  Location     Type
   663 ;;		None
   664 ;; Auto vars:     Size  Location     Type
   665 ;;		None
   666 ;; Return value:  Size  Location     Type
   667 ;;                  1    wreg      void 
   668 ;; Registers used:
   669 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   670 ;; Tracked objects:
   671 ;;		On entry : B00/0
   672 ;;		On exit  : 0/0
   673 ;;		Unchanged: 0/0
   674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   675 ;;      Params:         0       0       0       0       0
   676 ;;      Locals:         0       0       0       0       0
   677 ;;      Temps:          0       2       0       0       0
   678 ;;      Totals:         0       2       0       0       0
   679 ;;Total ram usage:        2 bytes
   680 ;; Hardware stack levels required when called: 3
   681 ;; This function calls:
   682 ;;		_cadena
   683 ;;		_setup
   684 ;;		_setupADC
   685 ;;		_setupUART
   686 ;; This function is called by:
   687 ;;		Startup code after reset
   688 ;; This function uses a non-reentrant model
   689 ;;
   690                           
   691     0030                     _main:	
   692                           ;psect for function _main
   693                           
   694     0030                     l963:	
   695                           ;incstack = 0
   696                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   697                           
   698                           
   699                           ;main.c: 61:     setup();
   700     0030  120A  118A  228C  120A  118A  	fcall	_setup
   701                           
   702                           ;main.c: 62:     setupADC();
   703     0035  120A  118A  2274  120A  118A  	fcall	_setupADC
   704                           
   705                           ;main.c: 63:     setupUART();
   706     003A  120A  118A  22CA  120A  118A  	fcall	_setupUART
   707     003F                     l965:
   708                           
   709                           ;main.c: 65:         cadena("\n\r-------------MENU------------------\n\r1) Leer Potencio
      +                          metro\n\r2) Enviar ASCII\n\r");
   710     003F  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   711     0040  120A  118A  2253  120A  118A  	fcall	_cadena
   712     0045                     l967:
   713                           
   714                           ;main.c: 66:         bandera = 1;
   715     0045  1283               	bcf	3,5	;RP0=0, select bank0
   716     0046  1303               	bcf	3,6	;RP1=0, select bank0
   717     0047  01C0               	clrf	_bandera
   718     0048  0AC0               	incf	_bandera,f
   719                           
   720                           ;main.c: 67:         while (bandera == 1){
   721     0049  28D2               	goto	l1013
   722     004A                     l73:
   723                           
   724                           ;main.c: 68:                 if (PIR1bits.RCIF == 1){
   725     004A  1E8C               	btfss	12,5	;volatile
   726     004B  284D               	goto	u401
   727     004C  284E               	goto	u400
   728     004D                     u401:
   729     004D  285C               	goto	l973
   730     004E                     u400:
   731     004E                     l969:
   732                           
   733                           ;main.c: 69:                 selector = RCREG;
   734     004E  081A               	movf	26,w	;volatile
   735     004F  00BF               	movwf	_selector
   736     0050                     l971:
   737                           
   738                           ;main.c: 70:                 PIR1bits.RCIF = 0;
   739     0050  128C               	bcf	12,5	;volatile
   740                           
   741                           ;main.c: 71:                 _delay((unsigned long)((10)*(8000000/4000.0)));}
   742     0051  301A               	movlw	26
   743     0052  1283               	bcf	3,5	;RP0=0, select bank0
   744     0053  1303               	bcf	3,6	;RP1=0, select bank0
   745     0054  00C8               	movwf	??_main+1
   746     0055  30F7               	movlw	247
   747     0056  00C7               	movwf	??_main
   748     0057                     u477:
   749     0057  0BC7               	decfsz	??_main,f
   750     0058  2857               	goto	u477
   751     0059  0BC8               	decfsz	??_main+1,f
   752     005A  2857               	goto	u477
   753     005B  285C               	nop2
   754     005C                     l973:
   755                           
   756                           ;main.c: 72:             if (selector == '1'){
   757     005C  3031               	movlw	49
   758     005D  1283               	bcf	3,5	;RP0=0, select bank0
   759     005E  1303               	bcf	3,6	;RP1=0, select bank0
   760     005F  063F               	xorwf	_selector,w
   761     0060  1D03               	btfss	3,2
   762     0061  2863               	goto	u411
   763     0062  2864               	goto	u410
   764     0063                     u411:
   765     0063  28A6               	goto	l991
   766     0064                     u410:
   767     0064                     l975:
   768                           
   769                           ;main.c: 73:                 ADCON0bits.GO = 1;
   770     0064  149F               	bsf	31,1	;volatile
   771     0065                     l977:
   772                           
   773                           ;main.c: 74:                 _delay((unsigned long)((5)*(8000000/4000.0)));
   774     0065  300D               	movlw	13
   775     0066  1283               	bcf	3,5	;RP0=0, select bank0
   776     0067  1303               	bcf	3,6	;RP1=0, select bank0
   777     0068  00C8               	movwf	??_main+1
   778     0069  30FB               	movlw	251
   779     006A  00C7               	movwf	??_main
   780     006B                     u487:
   781     006B  0BC7               	decfsz	??_main,f
   782     006C  286B               	goto	u487
   783     006D  0BC8               	decfsz	??_main+1,f
   784     006E  286B               	goto	u487
   785     006F                     l979:
   786                           
   787                           ;main.c: 75:                 TXREG = ascii[centena]+48;
   788     006F  1283               	bcf	3,5	;RP0=0, select bank0
   789     0070  1303               	bcf	3,6	;RP1=0, select bank0
   790     0071  083A               	movf	_centena,w
   791     0072  00C7               	movwf	??_main
   792     0073  0747               	addwf	??_main,w
   793     0074  3E20               	addlw	(low (_ascii| 0))& (0+255)
   794     0075  0084               	movwf	4
   795     0076  1383               	bcf	3,7	;select IRP bank0
   796     0077  0800               	movf	0,w
   797     0078  3E30               	addlw	48
   798     0079  0099               	movwf	25	;volatile
   799     007A                     l981:
   800                           
   801                           ;main.c: 76:                 _delay((unsigned long)((5)*(8000000/4000.0)));
   802     007A  300D               	movlw	13
   803     007B  1283               	bcf	3,5	;RP0=0, select bank0
   804     007C  1303               	bcf	3,6	;RP1=0, select bank0
   805     007D  00C8               	movwf	??_main+1
   806     007E  30FB               	movlw	251
   807     007F  00C7               	movwf	??_main
   808     0080                     u497:
   809     0080  0BC7               	decfsz	??_main,f
   810     0081  2880               	goto	u497
   811     0082  0BC8               	decfsz	??_main+1,f
   812     0083  2880               	goto	u497
   813                           
   814                           ;main.c: 77:                 TXREG = ascii[decena]+48;
   815     0084  1283               	bcf	3,5	;RP0=0, select bank0
   816     0085  1303               	bcf	3,6	;RP1=0, select bank0
   817     0086  0838               	movf	_decena,w
   818     0087  00C7               	movwf	??_main
   819     0088  0747               	addwf	??_main,w
   820     0089  3E20               	addlw	(low (_ascii| 0))& (0+255)
   821     008A  0084               	movwf	4
   822     008B  1383               	bcf	3,7	;select IRP bank0
   823     008C  0800               	movf	0,w
   824     008D  3E30               	addlw	48
   825     008E  0099               	movwf	25	;volatile
   826     008F                     l983:
   827                           
   828                           ;main.c: 78:                 _delay((unsigned long)((5)*(8000000/4000.0)));
   829     008F  300D               	movlw	13
   830     0090  1283               	bcf	3,5	;RP0=0, select bank0
   831     0091  1303               	bcf	3,6	;RP1=0, select bank0
   832     0092  00C8               	movwf	??_main+1
   833     0093  30FB               	movlw	251
   834     0094  00C7               	movwf	??_main
   835     0095                     u507:
   836     0095  0BC7               	decfsz	??_main,f
   837     0096  2895               	goto	u507
   838     0097  0BC8               	decfsz	??_main+1,f
   839     0098  2895               	goto	u507
   840     0099                     l985:
   841                           
   842                           ;main.c: 79:                 TXREG = ascii[unidad]+48;
   843     0099  1283               	bcf	3,5	;RP0=0, select bank0
   844     009A  1303               	bcf	3,6	;RP1=0, select bank0
   845     009B  0836               	movf	_unidad,w
   846     009C  00C7               	movwf	??_main
   847     009D  0747               	addwf	??_main,w
   848     009E  3E20               	addlw	(low (_ascii| 0))& (0+255)
   849     009F  0084               	movwf	4
   850     00A0  1383               	bcf	3,7	;select IRP bank0
   851     00A1  0800               	movf	0,w
   852     00A2  3E30               	addlw	48
   853     00A3  0099               	movwf	25	;volatile
   854     00A4                     l987:
   855                           
   856                           ;main.c: 80:                 bandera = 0;
   857     00A4  01C0               	clrf	_bandera
   858     00A5                     l989:
   859                           
   860                           ;main.c: 81:                 selector = 0;
   861     00A5  01BF               	clrf	_selector
   862     00A6                     l991:
   863                           
   864                           ;main.c: 84:             if (selector == '2'){
   865     00A6  3032               	movlw	50
   866     00A7  063F               	xorwf	_selector,w
   867     00A8  1D03               	btfss	3,2
   868     00A9  28AB               	goto	u421
   869     00AA  28AC               	goto	u420
   870     00AB                     u421:
   871     00AB  28D2               	goto	l1013
   872     00AC                     u420:
   873     00AC                     l993:
   874                           
   875                           ;main.c: 85:                 cadena("Ingrese caracter (solo un caracter)\n\r");
   876     00AC  3051               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   877     00AD  120A  118A  2253  120A  118A  	fcall	_cadena
   878                           
   879                           ;main.c: 86:                 cadena("\n\r");
   880     00B2  3074               	movlw	(low (((STR_2+35)-__stringbase)| (0+32768)))& (0+255)
   881     00B3  120A  118A  2253  120A  118A  	fcall	_cadena
   882     00B8                     l995:
   883                           
   884                           ;main.c: 87:                 flag = 1;
   885     00B8  1283               	bcf	3,5	;RP0=0, select bank0
   886     00B9  1303               	bcf	3,6	;RP1=0, select bank0
   887     00BA  01BE               	clrf	_flag
   888     00BB  0ABE               	incf	_flag,f
   889     00BC                     l997:
   890                           
   891                           ;main.c: 88:                 PIR1bits.RCIF = 0;
   892     00BC  128C               	bcf	12,5	;volatile
   893                           
   894                           ;main.c: 89:                 while (flag == 1){
   895     00BD  28CD               	goto	l1011
   896     00BE                     l78:
   897                           
   898                           ;main.c: 90:                 if (PIR1bits.RCIF == 1 && RCREG != 0){
   899     00BE  1E8C               	btfss	12,5	;volatile
   900     00BF  28C1               	goto	u431
   901     00C0  28C2               	goto	u430
   902     00C1                     u431:
   903     00C1  28CD               	goto	l1011
   904     00C2                     u430:
   905     00C2                     l999:
   906     00C2  081A               	movf	26,w	;volatile
   907     00C3  1903               	btfsc	3,2
   908     00C4  28C6               	goto	u441
   909     00C5  28C7               	goto	u440
   910     00C6                     u441:
   911     00C6  28CD               	goto	l1011
   912     00C7                     u440:
   913     00C7                     l1001:
   914                           
   915                           ;main.c: 91:                 PORTB = RCREG;
   916     00C7  081A               	movf	26,w	;volatile
   917     00C8  0086               	movwf	6	;volatile
   918     00C9                     l1003:
   919                           
   920                           ;main.c: 92:                 PIR1bits.RCIF = 0;
   921     00C9  128C               	bcf	12,5	;volatile
   922     00CA                     l1005:
   923                           
   924                           ;main.c: 93:                 flag = 0;
   925     00CA  01BE               	clrf	_flag
   926     00CB                     l1007:
   927                           
   928                           ;main.c: 94:                 bandera = 0;
   929     00CB  01C0               	clrf	_bandera
   930     00CC                     l1009:
   931                           
   932                           ;main.c: 95:                 selector = 0;}}}
   933     00CC  01BF               	clrf	_selector
   934     00CD                     l1011:
   935                           
   936                           ;main.c: 89:                 while (flag == 1){
   937     00CD  033E               	decf	_flag,w
   938     00CE  1903               	btfsc	3,2
   939     00CF  28D1               	goto	u451
   940     00D0  28D2               	goto	u450
   941     00D1                     u451:
   942     00D1  28BE               	goto	l78
   943     00D2                     u450:
   944     00D2                     l1013:
   945                           
   946                           ;main.c: 67:         while (bandera == 1){
   947     00D2  0340               	decf	_bandera,w
   948     00D3  1903               	btfsc	3,2
   949     00D4  28D6               	goto	u461
   950     00D5  28D7               	goto	u460
   951     00D6                     u461:
   952     00D6  284A               	goto	l73
   953     00D7                     u460:
   954     00D7  283F               	goto	l965
   955     00D8  120A  118A  280E   	ljmp	start
   956     00DB                     __end_of_main:
   957                           
   958                           	psect	text1
   959     02CA                     __ptext1:	
   960 ;; *************** function _setupUART *****************
   961 ;; Defined at:
   962 ;;		line 134 in file "main.c"
   963 ;; Parameters:    Size  Location     Type
   964 ;;		None
   965 ;; Auto vars:     Size  Location     Type
   966 ;;		None
   967 ;; Return value:  Size  Location     Type
   968 ;;                  1    wreg      void 
   969 ;; Registers used:
   970 ;;		wreg
   971 ;; Tracked objects:
   972 ;;		On entry : 0/0
   973 ;;		On exit  : 0/0
   974 ;;		Unchanged: 0/0
   975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   976 ;;      Params:         0       0       0       0       0
   977 ;;      Locals:         0       0       0       0       0
   978 ;;      Temps:          0       0       0       0       0
   979 ;;      Totals:         0       0       0       0       0
   980 ;;Total ram usage:        0 bytes
   981 ;; Hardware stack levels used: 1
   982 ;; Hardware stack levels required when called: 2
   983 ;; This function calls:
   984 ;;		Nothing
   985 ;; This function is called by:
   986 ;;		_main
   987 ;; This function uses a non-reentrant model
   988 ;;
   989                           
   990     02CA                     _setupUART:	
   991                           ;psect for function _setupUART
   992                           
   993     02CA                     l883:	
   994                           ;incstack = 0
   995                           ; Regs used in _setupUART: [wreg]
   996                           
   997                           
   998                           ;main.c: 137:     SPBRG = 12;
   999     02CA  300C               	movlw	12
  1000     02CB  1683               	bsf	3,5	;RP0=1, select bank1
  1001     02CC  1303               	bcf	3,6	;RP1=0, select bank1
  1002     02CD  0099               	movwf	25	;volatile
  1003     02CE                     l885:
  1004                           
  1005                           ;main.c: 141:     TXSTAbits.SYNC = 0;
  1006     02CE  1218               	bcf	24,4	;volatile
  1007     02CF                     l887:
  1008                           
  1009                           ;main.c: 142:     RCSTAbits.SPEN = 1;
  1010     02CF  1283               	bcf	3,5	;RP0=0, select bank0
  1011     02D0  1303               	bcf	3,6	;RP1=0, select bank0
  1012     02D1  1798               	bsf	24,7	;volatile
  1013     02D2                     l889:
  1014                           
  1015                           ;main.c: 148:     TXSTAbits.TXEN = 1;
  1016     02D2  1683               	bsf	3,5	;RP0=1, select bank1
  1017     02D3  1303               	bcf	3,6	;RP1=0, select bank1
  1018     02D4  1698               	bsf	24,5	;volatile
  1019     02D5                     l891:
  1020                           
  1021                           ;main.c: 149:     PIR1bits.TXIF = 0;
  1022     02D5  1283               	bcf	3,5	;RP0=0, select bank0
  1023     02D6  1303               	bcf	3,6	;RP1=0, select bank0
  1024     02D7  120C               	bcf	12,4	;volatile
  1025     02D8                     l893:
  1026                           
  1027                           ;main.c: 150:     RCSTAbits.CREN = 1;
  1028     02D8  1618               	bsf	24,4	;volatile
  1029     02D9                     l93:
  1030     02D9  0008               	return
  1031     02DA                     __end_of_setupUART:
  1032                           
  1033                           	psect	text2
  1034     0274                     __ptext2:	
  1035 ;; *************** function _setupADC *****************
  1036 ;; Defined at:
  1037 ;;		line 116 in file "main.c"
  1038 ;; Parameters:    Size  Location     Type
  1039 ;;		None
  1040 ;; Auto vars:     Size  Location     Type
  1041 ;;		None
  1042 ;; Return value:  Size  Location     Type
  1043 ;;                  1    wreg      void 
  1044 ;; Registers used:
  1045 ;;		wreg
  1046 ;; Tracked objects:
  1047 ;;		On entry : 0/0
  1048 ;;		On exit  : 0/0
  1049 ;;		Unchanged: 0/0
  1050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1051 ;;      Params:         0       0       0       0       0
  1052 ;;      Locals:         0       0       0       0       0
  1053 ;;      Temps:          0       1       0       0       0
  1054 ;;      Totals:         0       1       0       0       0
  1055 ;;Total ram usage:        1 bytes
  1056 ;; Hardware stack levels used: 1
  1057 ;; Hardware stack levels required when called: 2
  1058 ;; This function calls:
  1059 ;;		Nothing
  1060 ;; This function is called by:
  1061 ;;		_main
  1062 ;; This function uses a non-reentrant model
  1063 ;;
  1064                           
  1065     0274                     _setupADC:	
  1066                           ;psect for function _setupADC
  1067                           
  1068     0274                     l879:	
  1069                           ;incstack = 0
  1070                           ; Regs used in _setupADC: [wreg]
  1071                           
  1072                           
  1073                           ;main.c: 117:     ADCON0bits.ADCS1 = 1;
  1074     0274  1283               	bcf	3,5	;RP0=0, select bank0
  1075     0275  1303               	bcf	3,6	;RP1=0, select bank0
  1076     0276  179F               	bsf	31,7	;volatile
  1077                           
  1078                           ;main.c: 118:     ADCON0bits.ADCS0 = 0;
  1079     0277  131F               	bcf	31,6	;volatile
  1080                           
  1081                           ;main.c: 120:     ADCON1bits.VCFG1 = 0;
  1082     0278  1683               	bsf	3,5	;RP0=1, select bank1
  1083     0279  1303               	bcf	3,6	;RP1=0, select bank1
  1084     027A  129F               	bcf	31,5	;volatile
  1085                           
  1086                           ;main.c: 121:     ADCON1bits.VCFG0 = 0;
  1087     027B  121F               	bcf	31,4	;volatile
  1088                           
  1089                           ;main.c: 123:     ADCON1bits.ADFM = 0;
  1090     027C  139F               	bcf	31,7	;volatile
  1091                           
  1092                           ;main.c: 125:     ADCON0bits.CHS3 = 0;
  1093     027D  1283               	bcf	3,5	;RP0=0, select bank0
  1094     027E  1303               	bcf	3,6	;RP1=0, select bank0
  1095     027F  129F               	bcf	31,5	;volatile
  1096                           
  1097                           ;main.c: 126:     ADCON0bits.CHS2 = 0;
  1098     0280  121F               	bcf	31,4	;volatile
  1099                           
  1100                           ;main.c: 127:     ADCON0bits.CHS1 = 0;
  1101     0281  119F               	bcf	31,3	;volatile
  1102                           
  1103                           ;main.c: 128:     ADCON0bits.CHS0 = 0;
  1104     0282  111F               	bcf	31,2	;volatile
  1105                           
  1106                           ;main.c: 130:     ADCON0bits.ADON = 1;
  1107     0283  141F               	bsf	31,0	;volatile
  1108     0284                     l881:
  1109                           
  1110                           ;main.c: 131:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  1111     0284  3041               	movlw	65
  1112     0285  1283               	bcf	3,5	;RP0=0, select bank0
  1113     0286  1303               	bcf	3,6	;RP1=0, select bank0
  1114     0287  00C5               	movwf	??_setupADC
  1115     0288                     u517:
  1116     0288  0BC5               	decfsz	??_setupADC,f
  1117     0289  2A88               	goto	u517
  1118     028A  2A8B               	nop2
  1119     028B                     l90:
  1120     028B  0008               	return
  1121     028C                     __end_of_setupADC:
  1122                           
  1123                           	psect	text3
  1124     028C                     __ptext3:	
  1125 ;; *************** function _setup *****************
  1126 ;; Defined at:
  1127 ;;		line 101 in file "main.c"
  1128 ;; Parameters:    Size  Location     Type
  1129 ;;		None
  1130 ;; Auto vars:     Size  Location     Type
  1131 ;;		None
  1132 ;; Return value:  Size  Location     Type
  1133 ;;                  1    wreg      void 
  1134 ;; Registers used:
  1135 ;;		wreg, status,2, status,0
  1136 ;; Tracked objects:
  1137 ;;		On entry : 0/0
  1138 ;;		On exit  : 0/0
  1139 ;;		Unchanged: 0/0
  1140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1141 ;;      Params:         0       0       0       0       0
  1142 ;;      Locals:         0       0       0       0       0
  1143 ;;      Temps:          0       0       0       0       0
  1144 ;;      Totals:         0       0       0       0       0
  1145 ;;Total ram usage:        0 bytes
  1146 ;; Hardware stack levels used: 1
  1147 ;; Hardware stack levels required when called: 2
  1148 ;; This function calls:
  1149 ;;		Nothing
  1150 ;; This function is called by:
  1151 ;;		_main
  1152 ;; This function uses a non-reentrant model
  1153 ;;
  1154                           
  1155     028C                     _setup:	
  1156                           ;psect for function _setup
  1157                           
  1158     028C                     l859:	
  1159                           ;incstack = 0
  1160                           ; Regs used in _setup: [wreg+status,2+status,0]
  1161                           
  1162                           
  1163                           ;main.c: 102:     ANSEL = 0b00000001;
  1164     028C  3001               	movlw	1
  1165     028D  1683               	bsf	3,5	;RP0=1, select bank3
  1166     028E  1703               	bsf	3,6	;RP1=1, select bank3
  1167     028F  0088               	movwf	8	;volatile
  1168     0290                     l861:
  1169                           
  1170                           ;main.c: 103:     ANSELH = 0;
  1171     0290  0189               	clrf	9	;volatile
  1172     0291                     l863:
  1173                           
  1174                           ;main.c: 104:     TRISB = 0;
  1175     0291  1683               	bsf	3,5	;RP0=1, select bank1
  1176     0292  1303               	bcf	3,6	;RP1=0, select bank1
  1177     0293  0186               	clrf	6	;volatile
  1178     0294                     l865:
  1179                           
  1180                           ;main.c: 105:     PORTB = 0;
  1181     0294  1283               	bcf	3,5	;RP0=0, select bank0
  1182     0295  1303               	bcf	3,6	;RP1=0, select bank0
  1183     0296  0186               	clrf	6	;volatile
  1184     0297                     l867:
  1185                           
  1186                           ;main.c: 107:     OSCCONbits.IRCF = 0b111;
  1187     0297  3070               	movlw	112
  1188     0298  1683               	bsf	3,5	;RP0=1, select bank1
  1189     0299  1303               	bcf	3,6	;RP1=0, select bank1
  1190     029A  048F               	iorwf	15,f	;volatile
  1191     029B                     l869:
  1192                           
  1193                           ;main.c: 108:     OSCCONbits.SCS = 1;
  1194     029B  140F               	bsf	15,0	;volatile
  1195     029C                     l871:
  1196                           
  1197                           ;main.c: 110:     INTCONbits.GIE = 1;
  1198     029C  178B               	bsf	11,7	;volatile
  1199     029D                     l873:
  1200                           
  1201                           ;main.c: 111:     INTCONbits.PEIE = 1;
  1202     029D  170B               	bsf	11,6	;volatile
  1203     029E                     l875:
  1204                           
  1205                           ;main.c: 112:     PIE1bits.ADIE = 1;
  1206     029E  170C               	bsf	12,6	;volatile
  1207     029F                     l877:
  1208                           
  1209                           ;main.c: 113:     PIR1bits.ADIF = 0;
  1210     029F  1283               	bcf	3,5	;RP0=0, select bank0
  1211     02A0  1303               	bcf	3,6	;RP1=0, select bank0
  1212     02A1  130C               	bcf	12,6	;volatile
  1213     02A2                     l87:
  1214     02A2  0008               	return
  1215     02A3                     __end_of_setup:
  1216                           
  1217                           	psect	text4
  1218     0253                     __ptext4:	
  1219 ;; *************** function _cadena *****************
  1220 ;; Defined at:
  1221 ;;		line 154 in file "main.c"
  1222 ;; Parameters:    Size  Location     Type
  1223 ;;  cursor          1    wreg     PTR unsigned char 
  1224 ;;		 -> STR_3(3), STR_2(38), STR_1(80), 
  1225 ;; Auto vars:     Size  Location     Type
  1226 ;;  cursor          1    5[BANK0 ] PTR unsigned char 
  1227 ;;		 -> STR_3(3), STR_2(38), STR_1(80), 
  1228 ;; Return value:  Size  Location     Type
  1229 ;;                  1    wreg      void 
  1230 ;; Registers used:
  1231 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  1232 ;; Tracked objects:
  1233 ;;		On entry : 0/0
  1234 ;;		On exit  : 0/0
  1235 ;;		Unchanged: 0/0
  1236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1237 ;;      Params:         0       0       0       0       0
  1238 ;;      Locals:         0       1       0       0       0
  1239 ;;      Temps:          0       1       0       0       0
  1240 ;;      Totals:         0       2       0       0       0
  1241 ;;Total ram usage:        2 bytes
  1242 ;; Hardware stack levels used: 1
  1243 ;; Hardware stack levels required when called: 2
  1244 ;; This function calls:
  1245 ;;		Nothing
  1246 ;; This function is called by:
  1247 ;;		_main
  1248 ;; This function uses a non-reentrant model
  1249 ;;
  1250                           
  1251     0253                     _cadena:	
  1252                           ;psect for function _cadena
  1253                           
  1254                           
  1255                           ;incstack = 0
  1256                           ; Regs used in _cadena: [wreg-fsr0h+status,2+status,0+pclath]
  1257                           ;cadena@cursor stored from wreg
  1258     0253  1283               	bcf	3,5	;RP0=0, select bank0
  1259     0254  1303               	bcf	3,6	;RP1=0, select bank0
  1260     0255  00C6               	movwf	cadena@cursor
  1261     0256                     l895:
  1262                           
  1263                           ;main.c: 155:     while (*cursor != '\0'){
  1264     0256  2A67               	goto	l901
  1265     0257                     l98:
  1266     0257  1E0C               	btfss	12,4	;volatile
  1267     0258  2A5A               	goto	u241
  1268     0259  2A5B               	goto	u240
  1269     025A                     u241:
  1270     025A  2A57               	goto	l98
  1271     025B                     u240:
  1272     025B                     l897:
  1273                           
  1274                           ;main.c: 157:             TXREG = *cursor;
  1275     025B  0846               	movf	cadena@cursor,w
  1276     025C  0084               	movwf	4
  1277     025D  120A  118A  2100  120A  118A  	fcall	stringdir
  1278     0262  0099               	movwf	25	;volatile
  1279     0263                     l899:
  1280                           
  1281                           ;main.c: 158:             *cursor++;
  1282     0263  3001               	movlw	1
  1283     0264  00C5               	movwf	??_cadena
  1284     0265  0845               	movf	??_cadena,w
  1285     0266  07C6               	addwf	cadena@cursor,f
  1286     0267                     l901:
  1287                           
  1288                           ;main.c: 155:     while (*cursor != '\0'){
  1289     0267  0846               	movf	cadena@cursor,w
  1290     0268  0084               	movwf	4
  1291     0269  120A  118A  2100  120A  118A  	fcall	stringdir
  1292     026E  3A00               	xorlw	0
  1293     026F  1D03               	skipz
  1294     0270  2A72               	goto	u251
  1295     0271  2A73               	goto	u250
  1296     0272                     u251:
  1297     0272  2A57               	goto	l98
  1298     0273                     u250:
  1299     0273                     l102:
  1300     0273  0008               	return
  1301     0274                     __end_of_cadena:
  1302                           
  1303                           	psect	text5
  1304     017C                     __ptext5:	
  1305 ;; *************** function _isr *****************
  1306 ;; Defined at:
  1307 ;;		line 49 in file "main.c"
  1308 ;; Parameters:    Size  Location     Type
  1309 ;;		None
  1310 ;; Auto vars:     Size  Location     Type
  1311 ;;		None
  1312 ;; Return value:  Size  Location     Type
  1313 ;;                  1    wreg      void 
  1314 ;; Registers used:
  1315 ;;		wreg, status,2, status,0, pclath, cstack
  1316 ;; Tracked objects:
  1317 ;;		On entry : 0/0
  1318 ;;		On exit  : 0/0
  1319 ;;		Unchanged: 0/0
  1320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1321 ;;      Params:         0       0       0       0       0
  1322 ;;      Locals:         0       0       0       0       0
  1323 ;;      Temps:          0       4       0       0       0
  1324 ;;      Totals:         0       4       0       0       0
  1325 ;;Total ram usage:        4 bytes
  1326 ;; Hardware stack levels used: 1
  1327 ;; Hardware stack levels required when called: 1
  1328 ;; This function calls:
  1329 ;;		___lwdiv
  1330 ;;		___lwmod
  1331 ;; This function is called by:
  1332 ;;		Interrupt level 1
  1333 ;; This function uses a non-reentrant model
  1334 ;;
  1335                           
  1336     017C                     _isr:	
  1337                           ;psect for function _isr
  1338                           
  1339     017C                     i1l951:
  1340                           
  1341                           ;main.c: 50:     if (PIR1bits.ADIF == 1){
  1342     017C  1F0C               	btfss	12,6	;volatile
  1343     017D  297F               	goto	u39_21
  1344     017E  2980               	goto	u39_20
  1345     017F                     u39_21:
  1346     017F  29CE               	goto	i1l66
  1347     0180                     u39_20:
  1348     0180                     i1l953:
  1349                           
  1350                           ;main.c: 51:         pot = ADRESH;
  1351     0180  081E               	movf	30,w	;volatile
  1352     0181  00C1               	movwf	??_isr
  1353     0182  01C2               	clrf	??_isr+1
  1354     0183  0841               	movf	??_isr,w
  1355     0184  00B4               	movwf	_pot
  1356     0185  0842               	movf	??_isr+1,w
  1357     0186  00B5               	movwf	_pot+1
  1358     0187                     i1l955:
  1359                           
  1360                           ;main.c: 52:         centena = (pot/100);
  1361     0187  3064               	movlw	100
  1362     0188  00F0               	movwf	___lwdiv@divisor
  1363     0189  3000               	movlw	0
  1364     018A  00F1               	movwf	___lwdiv@divisor+1
  1365     018B  0835               	movf	_pot+1,w
  1366     018C  00F3               	movwf	___lwdiv@dividend+1
  1367     018D  0834               	movf	_pot,w
  1368     018E  00F2               	movwf	___lwdiv@dividend
  1369     018F  120A  118A  21D5  120A  118A  	fcall	___lwdiv
  1370     0194  0871               	movf	?___lwdiv+1,w
  1371     0195  1283               	bcf	3,5	;RP0=0, select bank0
  1372     0196  1303               	bcf	3,6	;RP1=0, select bank0
  1373     0197  00BB               	movwf	_centena+1
  1374     0198  0870               	movf	?___lwdiv,w
  1375     0199  00BA               	movwf	_centena
  1376     019A                     i1l957:
  1377                           
  1378                           ;main.c: 53:         decena = ((pot/10)%10);
  1379     019A  300A               	movlw	10
  1380     019B  00F8               	movwf	___lwmod@divisor
  1381     019C  3000               	movlw	0
  1382     019D  00F9               	movwf	___lwmod@divisor+1
  1383     019E  300A               	movlw	10
  1384     019F  00F0               	movwf	___lwdiv@divisor
  1385     01A0  3000               	movlw	0
  1386     01A1  00F1               	movwf	___lwdiv@divisor+1
  1387     01A2  0835               	movf	_pot+1,w
  1388     01A3  00F3               	movwf	___lwdiv@dividend+1
  1389     01A4  0834               	movf	_pot,w
  1390     01A5  00F2               	movwf	___lwdiv@dividend
  1391     01A6  120A  118A  21D5  120A  118A  	fcall	___lwdiv
  1392     01AB  0871               	movf	?___lwdiv+1,w
  1393     01AC  00FB               	movwf	___lwmod@dividend+1
  1394     01AD  0870               	movf	?___lwdiv,w
  1395     01AE  00FA               	movwf	___lwmod@dividend
  1396     01AF  120A  118A  2219  120A  118A  	fcall	___lwmod
  1397     01B4  0879               	movf	?___lwmod+1,w
  1398     01B5  1283               	bcf	3,5	;RP0=0, select bank0
  1399     01B6  1303               	bcf	3,6	;RP1=0, select bank0
  1400     01B7  00B9               	movwf	_decena+1
  1401     01B8  0878               	movf	?___lwmod,w
  1402     01B9  00B8               	movwf	_decena
  1403     01BA                     i1l959:
  1404                           
  1405                           ;main.c: 54:         unidad = (pot%10);
  1406     01BA  300A               	movlw	10
  1407     01BB  00F8               	movwf	___lwmod@divisor
  1408     01BC  3000               	movlw	0
  1409     01BD  00F9               	movwf	___lwmod@divisor+1
  1410     01BE  0835               	movf	_pot+1,w
  1411     01BF  00FB               	movwf	___lwmod@dividend+1
  1412     01C0  0834               	movf	_pot,w
  1413     01C1  00FA               	movwf	___lwmod@dividend
  1414     01C2  120A  118A  2219  120A  118A  	fcall	___lwmod
  1415     01C7  0879               	movf	?___lwmod+1,w
  1416     01C8  1283               	bcf	3,5	;RP0=0, select bank0
  1417     01C9  1303               	bcf	3,6	;RP1=0, select bank0
  1418     01CA  00B7               	movwf	_unidad+1
  1419     01CB  0878               	movf	?___lwmod,w
  1420     01CC  00B6               	movwf	_unidad
  1421     01CD                     i1l961:
  1422                           
  1423                           ;main.c: 55:         PIR1bits.ADIF = 0;
  1424     01CD  130C               	bcf	12,6	;volatile
  1425     01CE                     i1l66:
  1426     01CE  0844               	movf	??_isr+3,w
  1427     01CF  008A               	movwf	10
  1428     01D0  0E43               	swapf	??_isr+2,w
  1429     01D1  0083               	movwf	3
  1430     01D2  0EFE               	swapf	btemp,f
  1431     01D3  0E7E               	swapf	btemp,w
  1432     01D4  0009               	retfie
  1433     01D5                     __end_of_isr:
  1434                           
  1435                           	psect	intentry
  1436     0004                     __pintentry:	
  1437                           ;incstack = 0
  1438                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  1439                           
  1440     0004                     interrupt_function:
  1441     007E                     saved_w	set	btemp
  1442     0004  00FE               	movwf	btemp
  1443     0005  0E03               	swapf	3,w
  1444     0006  1283               	bcf	3,5	;RP0=0, select bank0
  1445     0007  1303               	bcf	3,6	;RP1=0, select bank0
  1446     0008  00C3               	movwf	??_isr+2
  1447     0009  080A               	movf	10,w
  1448     000A  00C4               	movwf	??_isr+3
  1449     000B  120A  118A  297C   	ljmp	_isr
  1450                           
  1451                           	psect	text6
  1452     0219                     __ptext6:	
  1453 ;; *************** function ___lwmod *****************
  1454 ;; Defined at:
  1455 ;;		line 5 in file "E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  1456 ;; Parameters:    Size  Location     Type
  1457 ;;  divisor         2    8[COMMON] unsigned int 
  1458 ;;  dividend        2   10[COMMON] unsigned int 
  1459 ;; Auto vars:     Size  Location     Type
  1460 ;;  counter         1   13[COMMON] unsigned char 
  1461 ;; Return value:  Size  Location     Type
  1462 ;;                  2    8[COMMON] unsigned int 
  1463 ;; Registers used:
  1464 ;;		wreg, status,2, status,0
  1465 ;; Tracked objects:
  1466 ;;		On entry : 0/0
  1467 ;;		On exit  : 0/0
  1468 ;;		Unchanged: 0/0
  1469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1470 ;;      Params:         4       0       0       0       0
  1471 ;;      Locals:         1       0       0       0       0
  1472 ;;      Temps:          1       0       0       0       0
  1473 ;;      Totals:         6       0       0       0       0
  1474 ;;Total ram usage:        6 bytes
  1475 ;; Hardware stack levels used: 1
  1476 ;; This function calls:
  1477 ;;		Nothing
  1478 ;; This function is called by:
  1479 ;;		_isr
  1480 ;; This function uses a non-reentrant model
  1481 ;;
  1482                           
  1483     0219                     ___lwmod:	
  1484                           ;psect for function ___lwmod
  1485                           
  1486     0219                     i1l929:	
  1487                           ;incstack = 0
  1488                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1489                           
  1490     0219  0878               	movf	___lwmod@divisor,w
  1491     021A  0479               	iorwf	___lwmod@divisor+1,w
  1492     021B  1903               	btfsc	3,2
  1493     021C  2A1E               	goto	u33_21
  1494     021D  2A1F               	goto	u33_20
  1495     021E                     u33_21:
  1496     021E  2A4E               	goto	i1l947
  1497     021F                     u33_20:
  1498     021F                     i1l931:
  1499     021F  01FD               	clrf	___lwmod@counter
  1500     0220  0AFD               	incf	___lwmod@counter,f
  1501     0221  2A2D               	goto	i1l937
  1502     0222                     i1l933:
  1503     0222  3001               	movlw	1
  1504     0223                     u34_25:
  1505     0223  1003               	clrc
  1506     0224  0DF8               	rlf	___lwmod@divisor,f
  1507     0225  0DF9               	rlf	___lwmod@divisor+1,f
  1508     0226  3EFF               	addlw	-1
  1509     0227  1D03               	skipz
  1510     0228  2A23               	goto	u34_25
  1511     0229                     i1l935:
  1512     0229  3001               	movlw	1
  1513     022A  00FC               	movwf	??___lwmod
  1514     022B  087C               	movf	??___lwmod,w
  1515     022C  07FD               	addwf	___lwmod@counter,f
  1516     022D                     i1l937:
  1517     022D  1FF9               	btfss	___lwmod@divisor+1,7
  1518     022E  2A30               	goto	u35_21
  1519     022F  2A31               	goto	u35_20
  1520     0230                     u35_21:
  1521     0230  2A22               	goto	i1l933
  1522     0231                     u35_20:
  1523     0231                     i1l939:
  1524     0231  0879               	movf	___lwmod@divisor+1,w
  1525     0232  027B               	subwf	___lwmod@dividend+1,w
  1526     0233  1D03               	skipz
  1527     0234  2A37               	goto	u36_25
  1528     0235  0878               	movf	___lwmod@divisor,w
  1529     0236  027A               	subwf	___lwmod@dividend,w
  1530     0237                     u36_25:
  1531     0237  1C03               	skipc
  1532     0238  2A3A               	goto	u36_21
  1533     0239  2A3B               	goto	u36_20
  1534     023A                     u36_21:
  1535     023A  2A41               	goto	i1l943
  1536     023B                     u36_20:
  1537     023B                     i1l941:
  1538     023B  0878               	movf	___lwmod@divisor,w
  1539     023C  02FA               	subwf	___lwmod@dividend,f
  1540     023D  0879               	movf	___lwmod@divisor+1,w
  1541     023E  1C03               	skipc
  1542     023F  03FB               	decf	___lwmod@dividend+1,f
  1543     0240  02FB               	subwf	___lwmod@dividend+1,f
  1544     0241                     i1l943:
  1545     0241  3001               	movlw	1
  1546     0242                     u37_25:
  1547     0242  1003               	clrc
  1548     0243  0CF9               	rrf	___lwmod@divisor+1,f
  1549     0244  0CF8               	rrf	___lwmod@divisor,f
  1550     0245  3EFF               	addlw	-1
  1551     0246  1D03               	skipz
  1552     0247  2A42               	goto	u37_25
  1553     0248                     i1l945:
  1554     0248  3001               	movlw	1
  1555     0249  02FD               	subwf	___lwmod@counter,f
  1556     024A  1D03               	btfss	3,2
  1557     024B  2A4D               	goto	u38_21
  1558     024C  2A4E               	goto	u38_20
  1559     024D                     u38_21:
  1560     024D  2A31               	goto	i1l939
  1561     024E                     u38_20:
  1562     024E                     i1l947:
  1563     024E  087B               	movf	___lwmod@dividend+1,w
  1564     024F  00F9               	movwf	?___lwmod+1
  1565     0250  087A               	movf	___lwmod@dividend,w
  1566     0251  00F8               	movwf	?___lwmod
  1567     0252                     i1l475:
  1568     0252  0008               	return
  1569     0253                     __end_of___lwmod:
  1570                           
  1571                           	psect	text7
  1572     01D5                     __ptext7:	
  1573 ;; *************** function ___lwdiv *****************
  1574 ;; Defined at:
  1575 ;;		line 5 in file "E:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  1576 ;; Parameters:    Size  Location     Type
  1577 ;;  divisor         2    0[COMMON] unsigned int 
  1578 ;;  dividend        2    2[COMMON] unsigned int 
  1579 ;; Auto vars:     Size  Location     Type
  1580 ;;  quotient        2    5[COMMON] unsigned int 
  1581 ;;  counter         1    7[COMMON] unsigned char 
  1582 ;; Return value:  Size  Location     Type
  1583 ;;                  2    0[COMMON] unsigned int 
  1584 ;; Registers used:
  1585 ;;		wreg, status,2, status,0
  1586 ;; Tracked objects:
  1587 ;;		On entry : 0/0
  1588 ;;		On exit  : 0/0
  1589 ;;		Unchanged: 0/0
  1590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1591 ;;      Params:         4       0       0       0       0
  1592 ;;      Locals:         3       0       0       0       0
  1593 ;;      Temps:          1       0       0       0       0
  1594 ;;      Totals:         8       0       0       0       0
  1595 ;;Total ram usage:        8 bytes
  1596 ;; Hardware stack levels used: 1
  1597 ;; This function calls:
  1598 ;;		Nothing
  1599 ;; This function is called by:
  1600 ;;		_isr
  1601 ;; This function uses a non-reentrant model
  1602 ;;
  1603                           
  1604     01D5                     ___lwdiv:	
  1605                           ;psect for function ___lwdiv
  1606                           
  1607     01D5                     i1l903:	
  1608                           ;incstack = 0
  1609                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1610                           
  1611     01D5  01F5               	clrf	___lwdiv@quotient
  1612     01D6  01F6               	clrf	___lwdiv@quotient+1
  1613     01D7                     i1l905:
  1614     01D7  0870               	movf	___lwdiv@divisor,w
  1615     01D8  0471               	iorwf	___lwdiv@divisor+1,w
  1616     01D9  1903               	btfsc	3,2
  1617     01DA  29DC               	goto	u26_21
  1618     01DB  29DD               	goto	u26_20
  1619     01DC                     u26_21:
  1620     01DC  2A14               	goto	i1l925
  1621     01DD                     u26_20:
  1622     01DD                     i1l907:
  1623     01DD  01F7               	clrf	___lwdiv@counter
  1624     01DE  0AF7               	incf	___lwdiv@counter,f
  1625     01DF  29EB               	goto	i1l913
  1626     01E0                     i1l909:
  1627     01E0  3001               	movlw	1
  1628     01E1                     u27_25:
  1629     01E1  1003               	clrc
  1630     01E2  0DF0               	rlf	___lwdiv@divisor,f
  1631     01E3  0DF1               	rlf	___lwdiv@divisor+1,f
  1632     01E4  3EFF               	addlw	-1
  1633     01E5  1D03               	skipz
  1634     01E6  29E1               	goto	u27_25
  1635     01E7                     i1l911:
  1636     01E7  3001               	movlw	1
  1637     01E8  00F4               	movwf	??___lwdiv
  1638     01E9  0874               	movf	??___lwdiv,w
  1639     01EA  07F7               	addwf	___lwdiv@counter,f
  1640     01EB                     i1l913:
  1641     01EB  1FF1               	btfss	___lwdiv@divisor+1,7
  1642     01EC  29EE               	goto	u28_21
  1643     01ED  29EF               	goto	u28_20
  1644     01EE                     u28_21:
  1645     01EE  29E0               	goto	i1l909
  1646     01EF                     u28_20:
  1647     01EF                     i1l915:
  1648     01EF  3001               	movlw	1
  1649     01F0                     u29_25:
  1650     01F0  1003               	clrc
  1651     01F1  0DF5               	rlf	___lwdiv@quotient,f
  1652     01F2  0DF6               	rlf	___lwdiv@quotient+1,f
  1653     01F3  3EFF               	addlw	-1
  1654     01F4  1D03               	skipz
  1655     01F5  29F0               	goto	u29_25
  1656     01F6  0871               	movf	___lwdiv@divisor+1,w
  1657     01F7  0273               	subwf	___lwdiv@dividend+1,w
  1658     01F8  1D03               	skipz
  1659     01F9  29FC               	goto	u30_25
  1660     01FA  0870               	movf	___lwdiv@divisor,w
  1661     01FB  0272               	subwf	___lwdiv@dividend,w
  1662     01FC                     u30_25:
  1663     01FC  1C03               	skipc
  1664     01FD  29FF               	goto	u30_21
  1665     01FE  2A00               	goto	u30_20
  1666     01FF                     u30_21:
  1667     01FF  2A07               	goto	i1l921
  1668     0200                     u30_20:
  1669     0200                     i1l917:
  1670     0200  0870               	movf	___lwdiv@divisor,w
  1671     0201  02F2               	subwf	___lwdiv@dividend,f
  1672     0202  0871               	movf	___lwdiv@divisor+1,w
  1673     0203  1C03               	skipc
  1674     0204  03F3               	decf	___lwdiv@dividend+1,f
  1675     0205  02F3               	subwf	___lwdiv@dividend+1,f
  1676     0206                     i1l919:
  1677     0206  1475               	bsf	___lwdiv@quotient,0
  1678     0207                     i1l921:
  1679     0207  3001               	movlw	1
  1680     0208                     u31_25:
  1681     0208  1003               	clrc
  1682     0209  0CF1               	rrf	___lwdiv@divisor+1,f
  1683     020A  0CF0               	rrf	___lwdiv@divisor,f
  1684     020B  3EFF               	addlw	-1
  1685     020C  1D03               	skipz
  1686     020D  2A08               	goto	u31_25
  1687     020E                     i1l923:
  1688     020E  3001               	movlw	1
  1689     020F  02F7               	subwf	___lwdiv@counter,f
  1690     0210  1D03               	btfss	3,2
  1691     0211  2A13               	goto	u32_21
  1692     0212  2A14               	goto	u32_20
  1693     0213                     u32_21:
  1694     0213  29EF               	goto	i1l915
  1695     0214                     u32_20:
  1696     0214                     i1l925:
  1697     0214  0876               	movf	___lwdiv@quotient+1,w
  1698     0215  00F1               	movwf	?___lwdiv+1
  1699     0216  0875               	movf	___lwdiv@quotient,w
  1700     0217  00F0               	movwf	?___lwdiv
  1701     0218                     i1l465:
  1702     0218  0008               	return
  1703     0219                     __end_of___lwdiv:
  1704     007E                     btemp	set	126	;btemp
  1705     007E                     wtemp0	set	126
  1706                           
  1707                           	psect	idloc
  1708                           
  1709                           ;Config register IDLOC0 @ 0x2000
  1710                           ;	unspecified, using default values
  1711     2000                     	org	8192
  1712     2000  3FFF               	dw	16383
  1713                           
  1714                           ;Config register IDLOC1 @ 0x2001
  1715                           ;	unspecified, using default values
  1716     2001                     	org	8193
  1717     2001  3FFF               	dw	16383
  1718                           
  1719                           ;Config register IDLOC2 @ 0x2002
  1720                           ;	unspecified, using default values
  1721     2002                     	org	8194
  1722     2002  3FFF               	dw	16383
  1723                           
  1724                           ;Config register IDLOC3 @ 0x2003
  1725                           ;	unspecified, using default values
  1726     2003                     	org	8195
  1727     2003  3FFF               	dw	16383
  1728                           
  1729                           	psect	config
  1730                           
  1731                           ;Config register CONFIG1 @ 0x2007
  1732                           ;	Oscillator Selection bits
  1733                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1734                           ;	Watchdog Timer Enable bit
  1735                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1736                           ;	Power-up Timer Enable bit
  1737                           ;	PWRTE = OFF, PWRT disabled
  1738                           ;	RE3/MCLR pin function select bit
  1739                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1740                           ;	Code Protection bit
  1741                           ;	CP = OFF, Program memory code protection is disabled
  1742                           ;	Data Code Protection bit
  1743                           ;	CPD = OFF, Data memory code protection is disabled
  1744                           ;	Brown Out Reset Selection bits
  1745                           ;	BOREN = OFF, BOR disabled
  1746                           ;	Internal External Switchover bit
  1747                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1748                           ;	Fail-Safe Clock Monitor Enabled bit
  1749                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1750                           ;	Low Voltage Programming Enable bit
  1751                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1752                           ;	In-Circuit Debugger Mode bit
  1753                           ;	DEBUG = 0x1, unprogramme  1754     2007                     	org	8199
  1755     2007  20D4               	dw	8404
  1756                           
  1757                           ;Config register CONFIG2 @ 0x2008
  1758                           ;	Brown-out Reset Selection bit
  1759                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1760                           ;	Flash Program Memory Self Write Enable bits
  1761                           ;	WRT = OFF, Write protection off
  1762     2008                     	org	8200
  1763     2008  3FFF               	dw	16383

Data Sizes:
    Strings     118
    Constant    0
    Data        20
    BSS         13
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      8      41
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    cadena@cursor	PTR unsigned char  size(1) Largest target is 80
		 -> STR_3(CODE[3]), STR_2(CODE[38]), STR_1(CODE[80]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->___lwmod
    ___lwmod->___lwdiv

Critical Paths under _main in BANK0

    _main->_cadena

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     144
                                              6 BANK0      2     2      0
                             _cadena
                              _setup
                           _setupADC
                          _setupUART
 ---------------------------------------------------------------------------------
 (1) _setupUART                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setupADC                                             1     1      0       0
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _cadena                                               2     2      0     144
                                              4 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  4     4      0     929
                                              0 BANK0      4     4      0
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     463
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     466
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _cadena
   _setup
   _setupADC
   _setupUART

 _isr (ROOT)
   ___lwdiv
   ___lwmod
     ___lwdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      8      29       5       51.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      37      12        0.0%
ABS                  0      0      37       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sun Oct 30 11:36:11 2022

                      pc 0002                       l73 004A                       l90 028B  
                     l93 02D9                       l78 00BE                       l87 02A2  
                     l98 0257                       fsr 0004                      l102 0273  
                    l901 0267                      l861 0290                      l871 029C  
                    l863 0291                      l873 029D                      l865 0294  
                    l881 0284                      l875 029E                      l867 0297  
                    l859 028C                      l891 02D5                      l883 02CA  
                    l971 0050                      l963 0030                      l877 029F  
                    l869 029B                      l893 02D8                      l885 02CE  
                    l981 007A                      l973 005C                      l965 003F  
                    l895 0256                      l879 0274                      l887 02CF  
                    l983 008F                      l975 0064                      l991 00A6  
                    l967 0045                      l897 025B                      l889 02D2  
                    l993 00AC                      l985 0099                      l977 0065  
                    l969 004E                      l899 0263                      l995 00B8  
                    l987 00A4                      l979 006F                      l997 00BC  
                    l989 00A5                      l999 00C2                      u240 025B  
                    u400 004E                      u241 025A                      u401 004D  
                    u250 0273                      u410 0064                      u251 0272  
                    u411 0063                      u420 00AC                      u421 00AB  
                    u430 00C2                      u431 00C1                      u440 00C7  
                    u441 00C6                      u450 00D2                      u451 00D1  
                    u507 0095                      u460 00D7                      u517 0288  
                    u461 00D6                      u477 0057                      u487 006B  
                    u497 0080                      _isr 017C                      _pot 0034  
                    fsr0 0004                      indf 0000                     l1001 00C7  
                   l1003 00C9                     l1011 00CD                     l1005 00CA  
                   l1013 00D2                     l1007 00CB                     l1009 00CC  
                   ?_isr 0070                     STR_1 0106                     STR_2 0156  
                   STR_3 0179                     i1l66 01CE                     _flag 003E  
                   _main 0030                     btemp 007E                     start 000E  
                  ??_isr 0041                    ?_main 0070                    _ANSEL 0188  
        __end_of___lwdiv 0219          __end_of___lwmod 0253                    i1l465 0218  
                  i1l475 0252                    i1l911 01E7                    i1l903 01D5  
                  i1l921 0207                    i1l913 01EB                    i1l905 01D7  
                  i1l923 020E                    i1l915 01EF                    i1l907 01DD  
                  i1l931 021F                    i1l917 0200                    i1l909 01E0  
                  i1l925 0214                    i1l941 023B                    i1l933 0222  
                  i1l919 0206                    i1l943 0241                    i1l935 0229  
                  i1l951 017C                    i1l945 0248                    i1l937 022D  
                  i1l929 0219                    i1l961 01CD                    i1l953 0180  
                  i1l939 0231                    i1l947 024E                    i1l955 0187  
                  i1l957 019A                    i1l959 01BA                    _RCREG 001A  
                  u30_20 0200                    u30_21 01FF                    u30_25 01FC  
                  u31_25 0208                    u32_20 0214                    u32_21 0213  
                  u33_20 021F                    u33_21 021E                    u26_20 01DD  
                  u26_21 01DC                    _SPBRG 0099                    u34_25 0223  
                  u35_20 0231                    u35_21 0230                    _PORTB 0006  
                  u27_25 01E1                    u28_20 01EF                    u36_20 023B  
                  u28_21 01EE                    u36_21 023A                    u36_25 0237  
                  u29_25 01F0                    u37_25 0242                    u38_20 024E  
                  u38_21 024D                    u39_20 0180                    u39_21 017F  
                  _TRISB 0086                    _TXREG 0019                    _ascii 0020  
                  _setup 028C                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 0011             __end_of_main 00DB  
                 ??_main 0047                   _ADRESH 001E                   ?_setup 0070  
                 _ANSELH 0189                   _cadena 0253                   _decena 0038  
              ??___lwdiv 0074                ??___lwmod 007C                   _unidad 0036  
       __end_of_setupADC 028C                   saved_w 007E  __end_of__initialization 002C  
         __pcstackCOMMON 0070             __pidataBANK0 02A3            __end_of_setup 02A3  
                ??_setup 0045               __pbssBANK0 0034               __pmaintext 0030  
                ?_cadena 0070               __pintentry 0004               __stringtab 0100  
           cadena@cursor 0046                ?_setupADC 0070                  ___lwdiv 01D5  
                ___lwmod 0219                  _bandera 0040                  _centena 003A  
                __ptext1 02CA                  __ptext2 0274                  __ptext3 028C  
                __ptext4 0253                  __ptext5 017C                  __ptext6 0219  
                __ptext7 01D5                  _palabra 003C     end_of_initialization 002C  
      __end_of_setupUART 02DA               ??_setupADC 0045                _RCSTAbits 0018  
              _TXSTAbits 0098           __end_of_cadena 0274      start_initialization 0011  
            __end_of_isr 01D5                 ??_cadena 0045               init_fetch0 02B7  
            __pdataBANK0 0020                ___latbits 0002            __pcstackBANK0 0041  
       ___lwdiv@dividend 0072                 ?___lwdiv 0070                 ?___lwmod 0078  
              __pstrings 0100         ___lwdiv@quotient 0075        interrupt_function 0004  
               _PIE1bits 008C                 _PIR1bits 000C                _setupUART 02CA  
             _ADCON0bits 001F              __stringbase 0105               _ADCON1bits 009F  
             ?_setupUART 0070       __end_of__stringtab 0106          ___lwdiv@divisor 0070  
        ___lwdiv@counter 0077                 _selector 003F                 _setupADC 0274  
             _INTCONbits 000B                 init_ram0 02BB                 intlevel1 0000  
       ___lwmod@dividend 007A                stringcode 0100               _OSCCONbits 008F  
            ??_setupUART 0045          ___lwmod@divisor 0078          ___lwmod@counter 007D  
               stringdir 0100                 stringtab 0100  
